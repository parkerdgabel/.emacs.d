;; Object semanticdb-project-database-file-bc1f2f5a
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-bc1f2f5a"
  :tables
  (list
    (semanticdb-table "semanticdb-table-4f83e582"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1628 1645])
            ("subr-x" include nil nil [1646 1663])
            ("with-decoded-time-value" function (:arguments ("varlist" "body")) nil [1665 4306])
            ("encode-time-value" function (:arguments ("high" "low" "micro" "pico" "type")) nil [4308 4922])
            ("make-obsolete" code nil nil [4924 4969])
            ("make-obsolete" code nil nil [4970 5021])
            ("parse-time-string" function (:prototype-flag t) nil [5023 5065])
            ("timezone-make-date-arpa-standard" function (:prototype-flag t) nil [5066 5121])
            ("date-to-time" function (:arguments ("date")) nil [5398 6179])
            ("defalias" code nil nil [6196 6236])
            ("seconds-to-time" function (:arguments ("seconds")) nil [6253 6447])
            ("days-to-time" function (:arguments ("days")) nil [6464 7007])
            ("time-since" function (:arguments ("time")) nil [7024 7280])
            ("define-obsolete-function-alias" code nil nil [7297 7367])
            ("date-to-day" function (:arguments ("date")) nil [7384 7615])
            ("days-between" function (:arguments ("date1" "date2")) nil [7632 7812])
            ("date-leap-year-p" function (:arguments ("year")) nil [7829 7987])
            ("time-date--day-in-year" function (:arguments ("tim")) nil [7989 8450])
            ("time-to-day-in-year" function (:arguments ("time")) nil [8467 8612])
            ("time-to-days" function (:arguments ("time")) nil [8629 9118])
            ("time-to-number-of-days" function (:arguments ("time")) nil [9146 9304])
            ("safe-date-to-time" function (:arguments ("date")) nil [9321 9543])
            ("format-seconds" function (:arguments ("string" "seconds")) nil [9562 14940])
            ("seconds-to-string" variable (:default-value (list (list 1 "ms" 0.001) (list 100 "s" 1) (list (* 60 100) "m" 60.0) (list (* 3600 30) "h" 3600.0) (list (* 3600 24 400) "d" (* 3600.0 24.0)) (list nil "y" (* 365.25 24 3600)))) nil [14942 15245])
            ("seconds-to-string" function (:arguments ("delay")) nil [15261 15676])
            ("date-days-in-month" function (:arguments ("year" "month")) nil [15678 15986])
            ("date-ordinal-to-time" function (:arguments ("year" "ordinal")) nil [15988 16411])
            ("decoded-time-add" function (:arguments ("time" "delta")) nil [16413 18936])
            ("decoded-time--alter-month" function (:arguments ("time" "increase")) nil [18938 19416])
            ("decoded-time--alter-day" function (:arguments ("time" "increase")) nil [19418 20118])
            ("decoded-time--alter-second" function (:arguments ("time" "seconds")) nil [20120 21134])
            ("make-decoded-time" function (:arguments ("second" "minute" "hour" "day" "month" "year" "dst" "zone")) nil [21136 21422])
            ("decoded-time-set-defaults" function (:arguments ("time" "default-zone")) nil [21424 22582])
            ("decoded-time-period" function (:arguments ("time")) nil [22584 23231])
            ("time-date" package nil nil [23233 23253]))          
      :file "time-date.el.gz"
      :pointmax 23282
      :fsize 7310
      :lastmodtime '(25521 36546 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-4a822ef0"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("subr-x" include nil nil [5610 5627])
            ("load" code nil nil [5630 5657])
            ("calendar-dlet" function (:arguments ("binders" "body")) nil [6501 6867])
            ("calendar" package nil nil [6935 6954])
            ("cal-menu" include nil nil [6955 6974])
            ("calendar" customgroup (:user-visible-flag t) nil [6976 7086])
            ("calendar-hooks" customgroup (:user-visible-flag t) nil [7088 7178])
            ("calendar-faces" customgroup (:user-visible-flag t) nil [7180 7270])
            ("calendar-offset" variable nil nil [7272 7585])
            ("calendar-setup" variable nil nil [7587 8313])
            ("calendar-minimum-window-height" variable (:default-value 8) nil [8315 8491])
            ("calendar-split-width-threshold" variable nil nil [8524 8817])
            ("calendar-week-start-day" variable nil nil [8819 9452])
            ("calendar-weekend-days" variable (:default-value '(0 6)) nil [9454 9722])
            ("calendar-view-diary-initially-flag" variable nil nil [9724 10164])
            ("calendar-mark-diary-entries-flag" variable nil nil [10180 10404])
            ("calendar-remove-frame-by-deleting" variable (:default-value t) nil [10406 10704])
            ("calendar-today" variable
               (:default-value '((t (:underline t)))
                :type "face")
                nil [10706 10875])
            ("diary" variable
               (:default-value '((((min-colors 88) (class color) (background light)) :foreground "red1") (((class color) (background light)) :foreground "red") (((min-colors 88) (class color) (background dark)) :foreground "yellow1") (((class color) (background dark)) :foreground "yellow") (t :weight bold))
                :type "face")
                nil [10877 11403])
            ("holiday" variable
               (:default-value '((((class color) (background light)) :background "pink") (((class color) (background dark)) :background "chocolate4") (t :inverse-video t))
                :type "face")
                nil [11405 11710])
            ("calendar-weekday-header" variable
               (:default-value '((t :inherit font-lock-constant-face))
                :type "face")
                nil [11712 11931])
            ("calendar-weekend-header" variable
               (:default-value '((t :inherit font-lock-comment-face))
                :type "face")
                nil [11933 12151])
            ("calendar-month-header" variable
               (:default-value '((t :inherit font-lock-function-name-face))
                :type "face")
                nil [12153 12321])
            ("diary-entry-marker" variable (:default-value 'diary) nil [12972 13227])
            ("calendar-today-marker" variable (:default-value 'calendar-today) nil [13229 13529])
            ("calendar-holiday-marker" variable (:default-value 'holiday) nil [13531 13796])
            ("calendar-view-holidays-initially-flag" variable nil nil [13798 14046])
            ("calendar-mark-holidays-flag" variable nil nil [14062 14281])
            ("calendar-mode-hook" variable nil nil [14283 14400])
            ("calendar-load-hook" variable nil nil [14402 14608])
            ("make-obsolete-variable" code nil nil [14609 14722])
            ("calendar-initial-window-hook" variable nil nil [14724 14967])
            ("calendar-today-visible-hook" variable nil nil [14969 15474])
            ("calendar-today-invisible-hook" variable nil nil [15476 15671])
            ("calendar-move-hook" variable nil nil [15673 16007])
            ("calendar-date-echo-text" variable (:default-value "mouse-2: general menu
mouse-3: menu for this date") nil [16009 17075])
            ("calendar-month-digit-width" variable nil nil [17078 17185])
            ("calendar-month-width" variable nil nil [17187 17266])
            ("calendar-right-margin" variable nil nil [17268 17336])
            ("calendar-month-edges" variable nil nil [17338 17624])
            ("calendar-month-edges" function (:arguments ("segment")) nil [17626 18723])
            ("calendar-recompute-layout-variables" function nil nil [18725 19452])
            ("calendar-set-layout-variable" function (:arguments ("symbol" "value" "minmax")) nil [19454 20069])
            ("calendar-left-margin" variable (:default-value 5) nil [20071 20303])
            ("calendar-intermonth-spacing" variable (:default-value 4) nil [20475 20750])
            ("calendar-column-width" variable (:default-value 3) nil [20790 21044])
            ("calendar-day-header-construct" function (:arguments ("width")) nil [21046 21480])
            ("calendar-day-header-width" variable (:default-value 2) nil [21520 22032])
            ("calendar-day-digit-width" variable (:default-value 2) nil [22071 22346])
            ("calendar-intermonth-header" variable nil nil [22348 22914])
            ("calendar-intermonth-text" variable nil nil [22916 24450])
            ("diary-file" variable (:default-value (locate-user-emacs-file "diary" "diary")) nil [24452 28458])
            ("diary-nonmarking-symbol" variable (:default-value "&") nil [28508 28657])
            ("diary-chinese-entry-symbol" variable (:default-value "C") nil [28659 28822])
            ("diary-hebrew-entry-symbol" variable (:default-value "H") nil [28824 28967])
            ("diary-islamic-entry-symbol" variable (:default-value "I") nil [28969 29114])
            ("diary-bahai-entry-symbol" variable (:default-value "B") nil [29116 29258])
            ("calendar-date-style" variable (:default-value 'american) nil [29260 30247])
            ("diary-iso-date-forms" variable (:default-value '((month "[-/]" day "[^-/0-9]") (year "[-/]" month "[-/]" day "[^0-9]") (monthname " *" day "[^-0-9]") (year " *" monthname " *" day "[^0-9]") (dayname "\\W"))) nil [30340 31512])
            ("diary-american-date-forms" variable (:default-value '((month "/" day "[^/0-9]") (month "/" day "/" year "[^0-9]") (monthname " *" day "[^,0-9]") (monthname " *" day ", *" year "[^0-9]") (dayname "\\W"))) nil [31514 32514])
            ("diary-european-date-forms" variable (:default-value '((day "/" month "[^/0-9]") (day "/" month "/" year "[^0-9]") (backup day " *" monthname "\\W+\\<\\([^*0-9]\\|\\([0-9]+[:aApP]\\)\\)") (day " *" monthname " *" year "[^0-9:aApP]") (dayname "\\W"))) nil [32516 33561])
            ("diary-font-lock-keywords" variable nil nil [33563 33596])
            ("diary-date-forms" variable (:default-value (cond ((eq calendar-date-style 'iso) diary-iso-date-forms) ((eq calendar-date-style 'european) diary-european-date-forms) (t diary-american-date-forms))) nil [33598 36650])
            ("calendar-iso-date-display-form" variable (:default-value '((format "%s-%.2d-%.2d" year (string-to-number month) (string-to-number day)))) nil [36725 37160])
            ("calendar-european-date-display-form" variable (:default-value '((if dayname (concat dayname ", ")) day " " monthname " " year)) nil [37162 37482])
            ("calendar-american-date-display-form" variable (:default-value '((if dayname (concat dayname ", ")) monthname " " day ", " year)) nil [37484 37805])
            ("calendar-date-display-form" variable (:default-value (cond ((eq calendar-date-style 'iso) calendar-iso-date-display-form) ((eq calendar-date-style 'european) calendar-european-date-display-form) (t calendar-american-date-display-form))) nil [37807 39037])
            ("calendar-american-month-header" variable (:default-value '(propertize (format "%s %d" (calendar-month-name month) year) 'font-lock-face 'calendar-month-header)) nil [39039 39409])
            ("calendar-european-month-header" variable (:default-value '(propertize (format "%s %d" (calendar-month-name month) year) 'font-lock-face 'calendar-month-header)) nil [39467 39837])
            ("calendar-iso-month-header" variable (:default-value '(propertize (format "%d %s" year (calendar-month-name month)) 'font-lock-face 'calendar-month-header)) nil [39895 40255])
            ("calendar-month-header" variable (:default-value (cond ((eq calendar-date-style 'iso) calendar-iso-month-header) ((eq calendar-date-style 'european) calendar-european-month-header) (t calendar-american-month-header))) nil [40313 41412])
            ("calendar-set-date-style" function
               (:user-visible-flag t
                :arguments ("style"))
                nil [41414 42353])
            ("diary-show-holidays-flag" variable (:default-value t) nil [42355 42688])
            ("calendar-debug-sexp" variable nil nil [42690 42836])
            ("calendar-hebrew-all-holidays-flag" variable nil nil [42838 43140])
            ("calendar-christian-all-holidays-flag" variable nil nil [43142 43456])
            ("calendar-islamic-all-holidays-flag" variable nil nil [43458 43764])
            ("calendar-bahai-all-holidays-flag" variable nil nil [43766 44058])
            ("calendar-chinese-all-holidays-flag" variable nil nil [44060 44232])
            ("calendar-time-zone-style" variable (:default-value 'symbolic) nil [44313 44590])
            ("calendar-recompute-layout-variables" code nil nil [44618 44655])
            ("calendar-first-date-row" variable
               (:constant-flag t
                :default-value 3)
                nil [44657 44742])
            ("calendar-buffer" variable
               (:constant-flag t
                :default-value "*Calendar*")
                nil [44744 44829])
            ("holiday-buffer" variable
               (:constant-flag t
                :default-value "*Holidays*")
                nil [44831 44930])
            ("diary-fancy-buffer" variable
               (:constant-flag t
                :default-value "*Fancy Diary Entries*")
                nil [44932 45058])
            ("calendar-other-calendars-buffer" variable
               (:constant-flag t
                :default-value "*Other Calendars*")
                nil [45060 45194])
            ("lunar-phases-buffer" variable
               (:constant-flag t
                :default-value "*Phases of Moon*")
                nil [45196 45295])
            ("solar-sunrises-buffer" variable
               (:constant-flag t
                :default-value "*Sunrise/Sunset Times*")
                nil [45297 45404])
            ("calendar-hebrew-yahrzeit-buffer" variable
               (:constant-flag t
                :default-value "*Yahrzeits*")
                nil [45406 45527])
            ("calendar-increment-month" function (:arguments ("mon" "yr" "n" "nmonths")) nil [45529 46456])
            ("displayed-month" variable nil nil [46479 46503])
            ("displayed-year" variable nil nil [46504 46527])
            ("calendar-increment-month-cons" function (:arguments ("n" "mon" "yr")) nil [46529 46873])
            ("calendar-sum" function (:arguments ("index" "initial" "condition" "expression")) nil [46875 47204])
            ("calendar-in-read-only-buffer" function (:arguments ("buffer" "body")) nil [47206 47816])
            ("calendar-extract-month" function (:arguments ("date")) nil [48962 49087])
            ("calendar-extract-day" function (:arguments ("date")) nil [49211 49333])
            ("calendar-extract-year" function (:arguments ("date")) nil [49335 49460])
            ("calendar-leap-year-p" function (:arguments ("year")) nil [49462 49799])
            ("calendar-last-day-of-month" function (:arguments ("month" "year")) nil [50065 50276])
            ("calendar-day-number" function (:arguments ("date")) nil [50415 51018])
            ("calendar-absolute-from-gregorian" function (:arguments ("date")) nil [51020 52254])
            ("calendar" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [52291 54228])
            ("calendar-basic-setup" function
               (:user-visible-flag t
                :arguments ("arg" "nodisplay"))
                nil [54230 58311])
            ("calendar-generate-window" function (:arguments ("mon" "yr")) nil [58313 60021])
            ("calendar-generate" function (:arguments ("month" "year")) nil [60023 60843])
            ("calendar-move-to-column" function (:arguments ("indent")) nil [60845 61017])
            ("calendar-ensure-newline" function nil nil [61019 61163])
            ("calendar-insert-at-column" function (:arguments ("indent" "string" "truncate")) nil [61165 62456])
            ("calendar-generate-month" function (:arguments ("month" "year" "indent")) nil [62458 65339])
            ("calendar-redraw" function (:user-visible-flag t) nil [65341 65812])
            ("calendar-mode-map" variable (:default-value (let ((map (make-keymap))) (suppress-keymap map) (dolist (c '(narrow-to-region mark-word mark-sexp mark-paragraph mark-defun mark-whole-buffer mark-page downcase-region upcase-region kill-region copy-region-as-kill capitalize-region write-region)) (define-key map (vector 'remap c) 'calendar-not-implemented)) (define-key map "<" 'calendar-scroll-right) (define-key map "<" 'calendar-scroll-right) (define-key map [prior] 'calendar-scroll-right-three-months) (define-key map "v" 'calendar-scroll-right-three-months) (define-key map ">" 'calendar-scroll-left) (define-key map ">" 'calendar-scroll-left) (define-key map [next] 'calendar-scroll-left-three-months) (define-key map "" 'calendar-scroll-left-three-months) (define-key map "" 'calendar-backward-day) (define-key map "" 'calendar-backward-week) (define-key map "{" 'calendar-backward-month) (define-key map "[" 'calendar-backward-year) (define-key map "" 'calendar-forward-day) (define-key map "" 'calendar-forward-week) (define-key map [left] 'calendar-backward-day) (define-key map [up] 'calendar-backward-week) (define-key map [right] 'calendar-forward-day) (define-key map [down] 'calendar-forward-week) (define-key map "}" 'calendar-forward-month) (define-key map "]" 'calendar-forward-year) (define-key map "" 'calendar-beginning-of-week) (define-key map "" 'calendar-end-of-week) (define-key map "a" 'calendar-beginning-of-month) (define-key map "e" 'calendar-end-of-month) (define-key map "<" 'calendar-beginning-of-year) (define-key map ">" 'calendar-end-of-year) (define-key map " " 'calendar-set-mark) (define-key map [67108896] 'calendar-set-mark) (define-key map "" 'calendar-exchange-point-and-mark) (define-key map "=" 'calendar-count-days-region) (define-key map "gd" 'calendar-goto-date) (define-key map "gD" 'calendar-goto-day-of-year) (define-key map "gj" 'calendar-julian-goto-date) (define-key map "ga" 'calendar-astro-goto-day-number) (define-key map "gh" 'calendar-hebrew-goto-date) (define-key map "gi" 'calendar-islamic-goto-date) (define-key map "gb" 'calendar-bahai-goto-date) (define-key map "gC" 'calendar-chinese-goto-date) (define-key map "gk" 'calendar-coptic-goto-date) (define-key map "ge" 'calendar-ethiopic-goto-date) (define-key map "gp" 'calendar-persian-goto-date) (define-key map "gc" 'calendar-iso-goto-date) (define-key map "gw" 'calendar-iso-goto-week) (define-key map "gf" 'calendar-french-goto-date) (define-key map "gml" 'calendar-mayan-goto-long-count-date) (define-key map "gmpc" 'calendar-mayan-previous-round-date) (define-key map "gmnc" 'calendar-mayan-next-round-date) (define-key map "gmph" 'calendar-mayan-previous-haab-date) (define-key map "gmnh" 'calendar-mayan-next-haab-date) (define-key map "gmpt" 'calendar-mayan-previous-tzolkin-date) (define-key map "gmnt" 'calendar-mayan-next-tzolkin-date) (define-key map "Aa" 'appt-add) (define-key map "Ad" 'appt-delete) (define-key map "S" 'calendar-sunrise-sunset) (define-key map "M" 'calendar-lunar-phases) (define-key map " " 'scroll-other-window) (define-key map [33554464] 'scroll-other-window-down) (define-key map "" 'scroll-other-window-down) (define-key map "" 'calendar-redraw) (define-key map "." 'calendar-goto-today) (define-key map "o" 'calendar-other-month) (define-key map "q" 'calendar-exit) (define-key map "a" 'calendar-list-holidays) (define-key map "h" 'calendar-cursor-holidays) (define-key map "x" 'calendar-mark-holidays) (define-key map "u" 'calendar-unmark) (define-key map "m" 'diary-mark-entries) (define-key map "d" 'diary-view-entries) (define-key map "D" 'diary-view-other-diary-entries) (define-key map "s" 'diary-show-all-entries) (define-key map "pd" 'calendar-print-day-of-year) (define-key map "pC" 'calendar-chinese-print-date) (define-key map "pk" 'calendar-coptic-print-date) (define-key map "pe" 'calendar-ethiopic-print-date) (define-key map "pp" 'calendar-persian-print-date) (define-key map "pc" 'calendar-iso-print-date) (define-key map "pj" 'calendar-julian-print-date) (define-key map "pa" 'calendar-astro-print-day-number) (define-key map "ph" 'calendar-hebrew-print-date) (define-key map "pi" 'calendar-islamic-print-date) (define-key map "pb" 'calendar-bahai-print-date) (define-key map "pf" 'calendar-french-print-date) (define-key map "pm" 'calendar-mayan-print-date) (define-key map "po" 'calendar-print-other-dates) (define-key map "id" 'diary-insert-entry) (define-key map "iw" 'diary-insert-weekly-entry) (define-key map "im" 'diary-insert-monthly-entry) (define-key map "iy" 'diary-insert-yearly-entry) (define-key map "ia" 'diary-insert-anniversary-entry) (define-key map "ib" 'diary-insert-block-entry) (define-key map "ic" 'diary-insert-cyclic-entry) (define-key map "ihd" 'diary-hebrew-insert-entry) (define-key map "ihm" 'diary-hebrew-insert-monthly-entry) (define-key map "ihy" 'diary-hebrew-insert-yearly-entry) (define-key map "iid" 'diary-islamic-insert-entry) (define-key map "iim" 'diary-islamic-insert-monthly-entry) (define-key map "iiy" 'diary-islamic-insert-yearly-entry) (define-key map "iBd" 'diary-bahai-insert-entry) (define-key map "iBm" 'diary-bahai-insert-monthly-entry) (define-key map "iBy" 'diary-bahai-insert-yearly-entry) (define-key map "iCd" 'diary-chinese-insert-entry) (define-key map "iCm" 'diary-chinese-insert-monthly-entry) (define-key map "iCy" 'diary-chinese-insert-yearly-entry) (define-key map "iCa" 'diary-chinese-insert-anniversary-entry) (define-key map "?" 'calendar-goto-info-node) (define-key map "Hm" 'cal-html-cursor-month) (define-key map "Hy" 'cal-html-cursor-year) (define-key map "tm" 'cal-tex-cursor-month) (define-key map "tM" 'cal-tex-cursor-month-landscape) (define-key map "td" 'cal-tex-cursor-day) (define-key map "tw1" 'cal-tex-cursor-week) (define-key map "tw2" 'cal-tex-cursor-week2) (define-key map "tw3" 'cal-tex-cursor-week-iso) (define-key map "tw4" 'cal-tex-cursor-week-monday) (define-key map "twW" 'cal-tex-cursor-week2-summary) (define-key map "tfd" 'cal-tex-cursor-filofax-daily) (define-key map "tfw" 'cal-tex-cursor-filofax-2week) (define-key map "tfW" 'cal-tex-cursor-filofax-week) (define-key map "tfy" 'cal-tex-cursor-filofax-year) (define-key map "ty" 'cal-tex-cursor-year) (define-key map "tY" 'cal-tex-cursor-year-landscape) (define-key map [menu-bar edit] 'undefined) (define-key map [menu-bar search] 'undefined) (easy-menu-define nil map nil cal-menu-sunmoon-menu) (easy-menu-define nil map nil cal-menu-diary-menu) (easy-menu-define nil map nil cal-menu-holidays-menu) (easy-menu-define nil map nil cal-menu-goto-menu) (easy-menu-define nil map nil cal-menu-scroll-menu) (define-key map [down-mouse-3] (easy-menu-binding cal-menu-context-mouse-menu)) (define-key map [down-mouse-2] (easy-menu-binding cal-menu-global-mouse-menu)) (if (and (boundp 'x-toolkit-scroll-bars) x-toolkit-scroll-bars) (define-key map [vertical-scroll-bar mouse-1] 'calendar-scroll-toolkit-scroll) (define-key map [vertical-scroll-bar mouse-1] 'calendar-scroll-left) (define-key map [vertical-scroll-bar drag-mouse-1] 'calendar-scroll-left) (define-key map [vertical-scroll-bar mouse-3] 'calendar-scroll-right) (define-key map [vertical-scroll-bar drag-mouse-3] 'calendar-scroll-right)) map)) nil [65814 74175])
            ("put" code nil nil [74241 74282])
            ("calendar-mode-line-entry" function (:arguments ("command" "echo" "key" "string")) nil [74284 74881])
            ("calendar-mode-line-format" variable (:default-value (list (calendar-mode-line-entry 'calendar-scroll-right "previous month" "<") "Calendar" (concat (calendar-mode-line-entry 'calendar-goto-info-node "read Info on Calendar" nil "info") " / " (calendar-mode-line-entry 'calendar-other-month "choose another month" nil "other") " / " (calendar-mode-line-entry 'calendar-goto-today "go to today's date" nil "today")) '(calendar-date-string (calendar-current-date) t) (calendar-mode-line-entry 'calendar-scroll-left "next month" ">"))) nil [74911 76683])
            ("calendar-goto-info-node" function (:user-visible-flag t) nil [76685 76835])
            ("calendar-mark-ring" variable nil nil [76837 76901])
            ("define-derived-mode" code nil nil [76903 77782])
            ("calendar-string-spread" function (:arguments ("strings" "char" "length")) nil [77784 78989])
            ("calendar-update-mode-line" function nil nil [78991 79974])
            ("calendar-buffer-list" function nil nil [79976 80437])
            ("calendar-exit" function
               (:user-visible-flag t
                :arguments ("kill"))
                nil [80439 81686])
            ("calendar-current-date" function (:arguments ("offset")) nil [81688 82165])
            ("calendar-column-to-segment" function nil nil [82167 82544])
            ("calendar-cursor-to-date" function (:arguments ("error" "event")) nil [82546 84132])
            ("calendar-gregorian-from-absolute" function (:arguments ("date")) nil [85328 86616])
            ("calendar-other-month" function
               (:user-visible-flag t
                :arguments ("month" "year" "event"))
                nil [86618 87464])
            ("calendar-set-mark" function
               (:user-visible-flag t
                :arguments ("arg" "event"))
                nil [87466 88454])
            ("calendar-exchange-point-and-mark" function (:user-visible-flag t) nil [88456 88830])
            ("calendar-count-days-region" function (:user-visible-flag t) nil [88832 89360])
            ("calendar-not-implemented" function (:user-visible-flag t) nil [89362 89529])
            ("calendar-read-sexp" function (:arguments ("prompt" "predicate" "default" "args")) nil [89531 90393])
            ("calendar-read" function (:arguments ("prompt" "acceptable" "initial-contents")) nil [90395 90943])
            ("calendar-customized-p" function (:arguments ("symbol")) nil [90945 91219])
            ("calendar-abbrev-construct" function (:arguments ("full" "maxlen")) nil [91221 91678])
            ("calendar-day-name-array" variable (:default-value ["Sunday" "Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday"]) nil [91680 93224])
            ("calendar-abbrev-length" variable (:default-value 3) nil [93226 94680])
            ("calendar-day-abbrev-array" variable (:default-value (calendar-abbrev-construct calendar-day-name-array)) nil [94682 96301])
            ("calendar-day-header-array" variable (:default-value (calendar-day-header-construct)) nil [96303 97490])
            ("calendar-month-name-array" variable (:default-value ["January" "February" "March" "April" "May" "June" "July" "August" "September" "October" "November" "December"]) nil [97492 98737])
            ("calendar-month-abbrev-array" variable (:default-value (calendar-abbrev-construct calendar-month-name-array)) nil [98739 99907])
            ("calendar-make-alist" function (:arguments ("sequence" "start-index" "filter" "sequences")) nil [99909 100864])
            ("calendar-read-date" function (:arguments ("noday" "default-date")) nil [100866 102482])
            ("calendar-interval" function (:arguments ("mon1" "yr1" "mon2" "yr2")) nil [102484 102879])
            ("calendar-day-name" function (:arguments ("date" "abbrev" "absolute")) nil [102881 103620])
            ("calendar-month-name" function (:arguments ("month" "abbrev")) nil [103622 104026])
            ("calendar-day-of-week" function (:arguments ("date")) nil [104028 104302])
            ("calendar-week-end-day" function nil nil [104304 104447])
            ("calendar-unmark" function (:user-visible-flag t) nil [104449 104750])
            ("calendar-date-is-visible-p" function (:arguments ("date")) nil [104752 105079])
            ("calendar-nongregorian-visible-p" function (:arguments ("month" "day" "toabs" "fromabs" "switch")) nil [105135 107127])
            ("calendar-date-is-valid-p" function (:arguments ("date")) nil [107129 107956])
            ("calendar-date-equal" function (:arguments ("date1" "date2")) nil [107958 108258])
            ("calendar-make-temp-face" function (:arguments ("attrlist")) nil [108260 109641])
            ("calendar-mark-visible-date" function (:arguments ("date" "mark")) nil [109643 111152])
            ("calendar-star-date" function nil nil [111154 111964])
            ("calendar-mark-today" function nil nil [111966 112254])
            ("calendar-date-compare" function (:arguments ("date1" "date2")) nil [112321 112575])
            ("calendar-date-string" function (:arguments ("date" "abbreviate" "nodayname")) nil [112577 113420])
            ("calendar-dayname-on-or-before" function (:arguments ("dayname" "date")) nil [113422 113939])
            ("calendar-nth-named-absday" function (:arguments ("n" "dayname" "month" "year" "day")) nil [113941 114742])
            ("calendar-nth-named-day" function (:arguments ("n" "dayname" "month" "year" "day")) nil [114744 115025])
            ("calendar-day-of-year-string" function (:arguments ("date")) nil [115027 115511])
            ("calendar-other-dates" function (:arguments ("date")) nil [115513 117450])
            ("declare-function" code nil nil [117452 117508])
            ("calendar-print-other-dates" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [117510 118269])
            ("calendar-print-day-of-year" function (:user-visible-flag t) nil [118271 118477])
            ("calendar-set-mode-line" function (:arguments ("str")) nil [118479 119203])
            ("run-hooks" code nil nil [119205 119236])
            ("calendar" package nil nil [119238 119257]))          
      :file "calendar.el.gz"
      :pointmax 119285
      :fsize 30932
      :lastmodtime '(25521 36546 0 0)
      :unmatched-syntax '((close-paren 5627 . 5628) (symbol 5592 . 5609) (open-paren 5591 . 5592))))
  :file "!Applications!Emacs.app!Contents!Resources!lisp!calendar!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
