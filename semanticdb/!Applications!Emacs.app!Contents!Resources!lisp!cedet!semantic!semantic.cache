;; Object semanticdb-project-database-file-469226e4
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-469226e4"
  :tables
  (list
    (semanticdb-table "semanticdb-table-bc17c1d0"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("semantic/fw" include nil nil [7546 7568])
            ("semantic-lex-map-symbols" function (:arguments ("fun" "table" "property")) nil [7618 8025])
            ("defvar-local" code nil nil [8204 8387])
            ("semantic-lex-keyword-invalid" function (:arguments ("name")) nil [8389 8549])
            ("semantic-lex-keyword-symbol" function (:arguments ("name")) nil [8551 8782])
            ("semantic-lex-keyword-p" function (:arguments ("name")) nil [8784 8999])
            ("semantic-lex-keyword-set" function (:arguments ("name" "value")) nil [9001 9170])
            ("semantic-lex-keyword-value" function (:arguments ("name")) nil [9172 9455])
            ("semantic-lex-keyword-put" function (:arguments ("name" "property" "value")) nil [9457 9719])
            ("semantic-lex-keyword-get" function (:arguments ("name" "property")) nil [9721 9971])
            ("semantic-lex-make-keyword-table" function (:arguments ("specs" "propspecs")) nil [9973 10908])
            ("semantic-lex-map-keywords" function (:arguments ("fun" "property")) nil [10910 11231])
            ("semantic-lex-keywords" function (:arguments ("property")) nil [11233 11543])
            ("semantic-lex-unterminated-syntax-end-function" variable nil nil [11568 11622])
            ("semantic-lex-analysis-bounds" variable nil nil [11623 11660])
            ("semantic-lex-end-point" variable nil nil [11661 11692])
            ("semantic-lex-token-bounds" function (:arguments ("token")) nil [11694 11914])
            ("semantic-lex-token-start" function (:arguments ("token")) nil [11916 12102])
            ("semantic-lex-token-end" function (:arguments ("token")) nil [12104 12286])
            ("semantic-lex-unterminated-syntax-detected" function (:arguments ("syntax")) nil [12288 12817])
            ("defvar-local" code nil nil [13073 13175])
            ("semantic-lex-type-invalid" function (:arguments ("type")) nil [13177 13332])
            ("semantic-lex-type-symbol" function (:arguments ("type")) nil [13334 13546])
            ("semantic-lex-type-p" function (:arguments ("type")) nil [13548 13718])
            ("semantic-lex-type-set" function (:arguments ("type" "value")) nil [13720 13886])
            ("semantic-lex-type-value" function (:arguments ("type" "noerror")) nil [13888 14264])
            ("semantic-lex-type-put" function (:arguments ("type" "property" "value" "add")) nil [14266 14752])
            ("semantic-lex-type-get" function (:arguments ("type" "property" "noerror")) nil [14754 15152])
            ("semantic-lex-preset-default-types" function nil nil [15154 16021])
            ("semantic-lex-make-type-table" function (:arguments ("specs" "propspecs")) nil [16023 17788])
            ("semantic-lex-map-types" function (:arguments ("fun" "property")) nil [17790 18102])
            ("semantic-lex-types" function (:arguments ("property")) nil [18104 18402])
            ("defvar-local" code nil nil [18449 18588])
            ("semantic-lex-tokens" variable (:default-value '((bol) (charquote) (close-paren) (comment) (newline) (open-paren) (punctuation) (semantic-list) (string) (symbol) (whitespace))) nil [18590 21931])
            ("defvar-local" code nil nil [21933 22310])
            ("defvar-local" code nil nil [22312 22445])
            ("defvar-local" code nil nil [22447 22695])
            ("defvar-local" code nil nil [22697 23921])
            ("defvar-local" code nil nil [23923 24035])
            ("semantic-lex-unterminated-syntax-end-function" variable (:default-value (lambda (_syntax _syntax-start lex-end) lex-end)) nil [24037 24611])
            ("declare-function" code nil nil [24647 24698])
            ("semantic-lex-test" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [24700 25213])
            ("semantic-lex-debug" variable nil nil [25215 25298])
            ("semantic-lex-debug" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25300 25779])
            ("semantic-lex-highlight-token" function (:arguments ("token")) nil [25781 26074])
            ("semantic-lex-one-token" function (:arguments ("analyzers")) nil [26462 26718])
            ("semantic-lex-end-point" variable nil nil [26720 26811])
            ("semantic-lex-current-depth" variable nil nil [26813 26912])
            ("semantic-lex-maximum-depth" variable nil nil [26914 27028])
            ("semantic-lex-token-stream" variable nil nil [27030 27116])
            ("semantic-lex-analysis-bounds" variable nil nil [27118 27199])
            ("semantic-lex-block-streams" variable nil nil [27201 27431])
            ("semantic-lex-reset-functions" variable nil nil [27433 27681])
            ("semantic-lex-block-stack" variable nil nil [27710 27747])
            ("semantic-lex-debug-break" function (:arguments ("token")) nil [27879 28259])
            ("define-lex" function (:arguments ("name" "doc" "analyzers")) nil [28261 31792])
            ("semantic-lex-token" function (:arguments ("symbol" "start" "end" "str")) nil [31992 32742])
            ("semantic-lex-token-p" function (:arguments ("thing")) nil [32744 33090])
            ("semantic-lex-token-with-text-p" function (:arguments ("thing")) nil [33092 33404])
            ("semantic-lex-token-without-text-p" function (:arguments ("thing")) nil [33406 33690])
            ("semantic-lex-expand-block-specs" function (:arguments ("specs")) nil [33711 34903])
            ("semantic-lex-push-token" function (:arguments ("token" "blockspecs")) nil [34907 35741])
            ("semantic-lex-token-class" function (:arguments ("token")) nil [35743 35892])
            ("semantic-lex-token-text" function (:arguments ("token")) nil [35894 36212])
            ("semantic-lex-init" function nil nil [36214 36701])
            ("semantic-lex" function
               (:overloadable (define-overloadable-function)
                :arguments ("start" "end" "depth" "length"))
                nil [36718 37553])
            ("semantic-lex-buffer" function (:arguments ("depth")) nil [37555 37735])
            ("semantic-lex-list" function (:arguments ("semlist" "depth")) nil [37737 37944])
            ("semantic-lex-start-block" function (:arguments ("syntax")) nil [38002 38385])
            ("semantic-lex-end-block" function (:arguments ("syntax")) nil [38387 40740])
            ("semantic-lex-debug-analyzers" variable nil nil [41025 41218])
            ("semantic-lex-unterminated-syntax-protection" function (:arguments ("syntax" "forms")) nil [41220 41978])
            ("define-lex-analyzer" function (:arguments ("name" "doc" "condition" "forms")) nil [41980 44147])
            ("define-lex-regex-analyzer" function (:arguments ("name" "doc" "regexp" "forms")) nil [44149 44538])
            ("define-lex-simple-regex-analyzer" function (:arguments ("name" "doc" "regexp" "toksym" "index" "forms")) nil [44540 45436])
            ("define-lex-block-analyzer" function (:arguments ("name" "doc" "spec1" "specs")) nil [45438 47755])
            ("define-lex-analyzer" code nil nil [47811 48018])
            ("define-lex-analyzer" code nil nil [48020 48560])
            ("define-lex-simple-regex-analyzer" code nil nil [48562 48692])
            ("define-lex-regex-analyzer" code nil nil [48694 49482])
            ("define-lex-regex-analyzer" code nil nil [49484 49752])
            ("define-lex-regex-analyzer" code nil nil [49754 50492])
            ("define-lex-regex-analyzer" code nil nil [50494 50756])
            ("define-lex-simple-regex-analyzer" code nil nil [50758 50980])
            ("define-lex-regex-analyzer" code nil nil [50982 51261])
            ("define-lex-simple-regex-analyzer" code nil nil [51263 51436])
            ("define-lex-simple-regex-analyzer" code nil nil [51438 51581])
            ("define-lex-analyzer" code nil nil [51583 52831])
            ("define-lex-regex-analyzer" code nil nil [52833 53527])
            ("define-lex-simple-regex-analyzer" code nil nil [53529 53726])
            ("define-lex-simple-regex-analyzer" code nil nil [53728 53926])
            ("define-lex-regex-analyzer" code nil nil [53928 54247])
            ("define-lex-regex-analyzer" code nil nil [54249 54903])
            ("define-lex-regex-analyzer" code nil nil [54905 55591])
            ("define-lex-regex-analyzer" code nil nil [55593 56281])
            ("semantic-comment-lexer" function (:lexical-analyzer-flag t) nil [56384 56737])
            ("semantic-simple-lexer" function (:lexical-analyzer-flag t) nil [56757 57260])
            ("define-lex-keyword-type-analyzer" function (:arguments ("name" "doc" "syntax")) nil [57422 57981])
            ("define-lex-sexp-type-analyzer" function (:arguments ("name" "doc" "syntax" "token")) nil [57983 58526])
            ("define-lex-regex-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches" "default")) nil [58528 59807])
            ("define-lex-string-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches" "default")) nil [59809 61409])
            ("define-lex-block-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches")) nil [61411 65229])
            ("semantic-lex-catch-errors" function (:arguments ("symbol" "forms")) nil [65469 66946])
            ("semantic-flex-tokens" variable (:default-value semantic-lex-tokens) nil [67004 67127])
            ("make-obsolete-variable" code nil nil [67128 67226])
            ("semantic-flex-unterminated-syntax-end-function" variable (:default-value (lambda (_syntax _syntax-start flex-end) flex-end)) nil [67228 67806])
            ("make-obsolete-variable" code nil nil [67807 67914])
            ("defvar-local" code nil nil [67916 68337])
            ("make-obsolete-variable" code nil nil [68338 68399])
            ("defvar-local" code nil nil [68401 68779])
            ("make-obsolete-variable" code nil nil [68780 68851])
            ("defvar-local" code nil nil [68853 69030])
            ("make-obsolete-variable" code nil nil [69031 69092])
            ("defvar-local" code nil nil [69094 69317])
            ("make-obsolete-variable" code nil nil [69318 69384])
            ("defvar-local" code nil nil [69386 69607])
            ("make-obsolete-variable" code nil nil [69608 69676])
            ("defvar-local" code nil nil [69678 69903])
            ("make-obsolete-variable" code nil nil [69904 69965])
            ("defvar-local" code nil nil [69967 70090])
            ("make-obsolete-variable" code nil nil [70091 70206])
            ("defvar-local" code nil nil [70208 70322])
            ("make-obsolete-variable" code nil nil [70323 70379])
            ("semantic/lex" package nil nil [70381 70404]))          
      :file "lex.el.gz"
      :pointmax 70555
      :fsize 17879
      :lastmodtime '(25521 36546 0 0)
      :unmatched-syntax '((close-paren 34904 . 34905) (symbol 33693 . 33709) (open-paren 33692 . 33693))))
  :file "!Applications!Emacs.app!Contents!Resources!lisp!cedet!semantic!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
