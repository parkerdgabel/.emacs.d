;; Object semanticdb-project-database-file-4a93bb7a
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-4a93bb7a"
  :tables
  (list
    (semanticdb-table "semanticdb-table-4663582c"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1694 1711])
            ("button" include nil nil [1712 1729])
            ("regexp-opt" include nil nil [1730 1751])
            ("evil-operator-shortcut-map" variable nil nil [1769 1804])
            ("evil-operator-state-map" variable nil nil [1805 1837])
            ("evil-motion-state-map" variable nil nil [1838 1868])
            ("golden-ratio-mode" variable nil nil [1869 1895])
            ("declare-function" code nil nil [1896 1961])
            ("which-key" customgroup (:user-visible-flag t) nil [1976 2083])
            ("which-key-idle-delay" variable (:default-value 1.0) nil [2085 2409])
            ("which-key-idle-secondary-delay" variable nil nil [2411 2802])
            ("which-key-echo-keystrokes" variable (:default-value (if (and echo-keystrokes (> (+ echo-keystrokes 0.01) which-key-idle-delay)) (/ (float which-key-idle-delay) 4) echo-keystrokes)) nil [2804 3420])
            ("which-key-max-description-length" variable (:default-value 27) nil [3422 4016])
            ("which-key-min-column-description-width" variable nil nil [4018 4157])
            ("which-key-add-column-padding" variable nil nil [4159 4319])
            ("which-key-unicode-correction" variable (:default-value 3) nil [4321 5031])
            ("which-key-dont-use-unicode" variable nil nil [5033 5179])
            ("which-key-separator" variable (:default-value (if which-key-dont-use-unicode " : " " ‚Üí ")) nil [5181 5450])
            ("which-key-ellipsis" variable (:default-value (if which-key-dont-use-unicode ".." "‚Ä¶")) nil [5452 5776])
            ("which-key-prefix-prefix" variable (:default-value "+") nil [5778 5963])
            ("which-key-compute-remaps" variable nil nil [5965 6147])
            ("which-key-replacement-alist" variable (:default-value (delq nil `(((nil . "which-key-show-next-page-no-cycle") nil . "wk next pg") ,@(unless which-key-dont-use-unicode '((("<left>") "‚Üê") (("<right>") "‚Üí"))) (("<\\([[:alnum:]-]+\\)>") "\\1")))) nil [6149 8115])
            ("which-key-allow-multiple-replacements" variable nil nil [8117 8421])
            ("which-key-show-docstrings" variable nil nil [8423 9049])
            ("which-key-highlighted-command-list" variable (:default-value 'nil) nil [9051 9486])
            ("which-key-special-keys" variable (:default-value 'nil) nil [9488 9826])
            ("which-key-buffer-name" variable (:default-value " *which-key*") nil [9828 9942])
            ("which-key-show-prefix" variable (:default-value 'echo) nil [9944 10481])
            ("which-key-popup-type" variable (:default-value 'side-window) nil [10483 10869])
            ("which-key-min-display-lines" variable (:default-value 1) nil [10871 11023])
            ("which-key-max-display-columns" variable nil nil [11025 11244])
            ("which-key-side-window-location" variable (:default-value 'bottom) nil [11246 11803])
            ("which-key-side-window-slot" variable nil nil [11805 12411])
            ("which-key-side-window-max-width" variable (:default-value 0.333) nil [12413 12675])
            ("which-key-side-window-max-height" variable (:default-value 0.25) nil [12677 12941])
            ("which-key-frame-max-width" variable (:default-value 60) nil [12943 13077])
            ("which-key-frame-max-height" variable (:default-value 20) nil [13079 13215])
            ("which-key-allow-imprecise-window-fit" variable (:default-value (not (display-graphic-p))) nil [13217 13635])
            ("which-key-show-remaining-keys" variable nil nil [13637 13838])
            ("which-key-sort-order" variable (:default-value 'which-key-key-order) nil [13840 14694])
            ("which-key-sort-uppercase-first" variable (:default-value t) nil [14696 14914])
            ("which-key-paging-prefixes" variable (:default-value 'nil) nil [14916 15040])
            ("which-key-paging-key" variable (:default-value "<f5>") nil [15042 15216])
            ("which-key-use-C-h-commands" variable (:default-value t) nil [15567 15864])
            ("which-key-show-early-on-C-h" variable nil nil [15866 16429])
            ("which-key-is-verbose" variable nil nil [16431 16567])
            ("which-key-preserve-window-configuration" variable nil nil [16569 16916])
            ("which-key-C-h-map-prompt" variable (:default-value (concat " \\<which-key-C-h-map>" " \\[which-key-show-next-page-cycle]" which-key-separator "next-page," " \\[which-key-show-previous-page-cycle]" which-key-separator "previous-page," " \\[which-key-undo-key]" which-key-separator "undo-key," " \\[which-key-toggle-docstrings]" which-key-separator "toggle-docstrings," " \\[which-key-show-standard-help]" which-key-separator "help," " \\[which-key-abort]" which-key-separator "abort" " 1..9" which-key-separator "digit-arg")) nil [16918 17673])
            ("which-key-C-h-map" variable (:default-value (let ((map (make-sparse-keymap))) (dolist (bind `(("" . which-key-abort) ("a" . which-key-abort) ("" . which-key-toggle-docstrings) ("d" . which-key-toggle-docstrings) (,(vector help-char) . which-key-show-standard-help) ("h" . which-key-show-standard-help) ("" . which-key-show-next-page-cycle) ("n" . which-key-show-next-page-cycle) ("" . which-key-show-previous-page-cycle) ("p" . which-key-show-previous-page-cycle) ("" . which-key-undo-key) ("u" . which-key-undo-key) ("1" . which-key-digit-argument) ("2" . which-key-digit-argument) ("3" . which-key-digit-argument) ("4" . which-key-digit-argument) ("5" . which-key-digit-argument) ("6" . which-key-digit-argument) ("7" . which-key-digit-argument) ("8" . which-key-digit-argument) ("9" . which-key-digit-argument))) (define-key map (car bind) (cdr bind))) map)) nil [17675 18983])
            ("which-key--paging-functions" variable (:default-value '(which-key-C-h-dispatch which-key-manual-update which-key-turn-page which-key-show-next-page-cycle which-key-show-next-page-no-cycle which-key-show-previous-page-cycle which-key-show-previous-page-no-cycle which-key-undo-key which-key-undo)) nil [18985 19567])
            ("which-key-persistent-popup" variable nil nil [19569 19663])
            ("which-key-hide-alt-key-translations" variable (:default-value t) nil [19665 20000])
            ("which-key-delay-functions" variable nil nil [20002 20655])
            ("which-key-allow-regexps" variable nil nil [20657 20987])
            ("which-key-inhibit-regexps" variable nil nil [20989 21361])
            ("which-key-show-transient-maps" variable nil nil [21363 21646])
            ("make-obsolete-variable" code nil nil [21648 21796])
            ("which-key-init-buffer-hook" variable (:default-value 'nil) nil [21807 21934])
            ("which-key-faces" customgroup (:user-visible-flag t) nil [21948 22050])
            ("which-key-key-face" variable
               (:default-value '((t :inherit font-lock-constant-face))
                :type "face")
                nil [22052 22180])
            ("which-key-separator-face" variable
               (:default-value '((t :inherit font-lock-comment-face))
                :type "face")
                nil [22182 22346])
            ("which-key-note-face" variable
               (:default-value '((t :inherit which-key-separator-face))
                :type "face")
                nil [22348 22500])
            ("which-key-command-description-face" variable
               (:default-value '((t :inherit font-lock-function-name-face))
                :type "face")
                nil [22502 22677])
            ("which-key-local-map-description-face" variable
               (:default-value '((t :inherit which-key-command-description-face))
                :type "face")
                nil [22679 22881])
            ("which-key-highlighted-command-face" variable
               (:default-value '((t :inherit which-key-command-description-face :underline t))
                :type "face")
                nil [22883 23154])
            ("which-key-group-description-face" variable
               (:default-value '((t :inherit font-lock-keyword-face))
                :type "face")
                nil [23156 23331])
            ("which-key-special-key-face" variable
               (:default-value '((t :inherit which-key-key-face :inverse-video t :weight bold))
                :type "face")
                nil [23333 23508])
            ("which-key-docstring-face" variable
               (:default-value '((t :inherit which-key-note-face))
                :type "face")
                nil [23510 23636])
            ("which-key-custom-popup-max-dimensions-function" variable nil nil [23657 24022])
            ("which-key-custom-hide-popup-function" variable nil nil [24024 24241])
            ("which-key-custom-show-popup-function" variable nil nil [24243 24541])
            ("which-key-lighter" variable (:default-value " WK") nil [24543 24662])
            ("which-key-inhibit" variable nil nil [24664 24862])
            ("which-key-keymap-history" variable nil nil [24864 24977])
            ("which-key--buffer" variable nil nil [24998 25079])
            ("which-key--timer" variable nil nil [25080 25161])
            ("which-key--secondary-timer-active" variable nil nil [25162 25264])
            ("which-key--paging-timer" variable nil nil [25265 25352])
            ("which-key--frame" variable nil nil [25353 25475])
            ("which-key--echo-keystrokes-backup" variable nil nil [25476 25583])
            ("which-key--prefix-help-cmd-backup" variable nil nil [25584 25687])
            ("which-key--last-try-2-loc" variable nil nil [25688 25794])
            ("which-key--automatic-display" variable nil nil [25795 25904])
            ("which-key--debug-buffer-name" variable nil nil [25905 25998])
            ("which-key--multiple-locations" variable nil nil [25999 26041])
            ("which-key--inhibit-next-operator-popup" variable nil nil [26042 26093])
            ("which-key--prior-show-keymap-args" variable nil nil [26094 26140])
            ("which-key--previous-frame-size" variable nil nil [26141 26184])
            ("which-key--prefix-title-alist" variable nil nil [26185 26227])
            ("which-key--evil-keys-regexp" variable (:default-value (eval-when-compile (regexp-opt '("-state")))) nil [26228 26347])
            ("which-key--ignore-non-evil-keys-regexp" variable (:default-value (eval-when-compile (regexp-opt '("mouse-" "wheel-" "remap" "drag-" "scroll-bar" "select-window" "switch-frame" "which-key")))) nil [26348 26545])
            ("which-key--ignore-keys-regexp" variable (:default-value (eval-when-compile (regexp-opt '("mouse-" "wheel-" "remap" "drag-" "scroll-bar" "select-window" "switch-frame" "-state" "which-key")))) nil [26546 26761])
            ("which-key--pages-obj" variable nil nil [26763 26796])
            ("which-key--pages" type
               (:members ("pages" "height" "widths" "keys/page" "page-nums" "num-pages" "total-keys" "prefix" "prefix-title")
                :type "struct")
                nil [26797 26927])
            ("which-key--saved-window-configuration" variable nil nil [26929 26979])
            ("which-key--rotate" function (:arguments ("list" "n")) nil [26981 27169])
            ("which-key--pages-set-current-page" function (:arguments ("pages-obj" "n")) nil [27171 27692])
            ("which-key--on-first-page" function nil nil [27694 27790])
            ("which-key--on-last-page" function nil nil [27792 27940])
            ("which-key--current-prefix" function nil nil [27942 28064])
            ("which-key--debug-message" function (:arguments ("msg")) nil [28066 28358])
            ("which-key--safe-lookup-key" function (:arguments ("keymap" "key")) nil [28360 28676])
            ("which-key--safe-lookup-key-description" function (:arguments ("keymap" "key")) nil [28678 29093])
            ("evil-state" variable nil nil [29138 29161])
            ("which-key-allow-evil-operators" variable (:default-value (boundp 'evil-this-operator)) nil [29163 29450])
            ("which-key-show-operator-state-maps" variable nil nil [29452 29793])
            ("which-key--god-mode-support-enabled" variable nil nil [29810 29993])
            ("which-key--god-mode-key-string" variable nil nil [29995 30088])
            ("which-key--god-mode-lookup-command-advice" function (:arguments ("orig-fun" "arg1" "args")) nil [30090 30338])
            ("which-key-enable-god-mode-support" function
               (:user-visible-flag t
                :arguments ("disable"))
                nil [30340 30903])
            ("define-minor-mode" code nil nil [30930 32693])
            ("which-key--init-buffer" function nil nil [32695 33350])
            ("which-key--setup-echo-keystrokes" function nil nil [33352 33833])
            ("which-key-remove-default-unicode-chars" function nil nil [33835 34188])
            ("which-key-setup-side-window-right" function (:user-visible-flag t) nil [34260 34510])
            ("which-key-setup-side-window-right-bottom" function (:user-visible-flag t) nil [34527 34836])
            ("which-key-setup-side-window-bottom" function (:user-visible-flag t) nil [34853 35144])
            ("which-key-setup-minibuffer" function (:user-visible-flag t) nil [35161 35525])
            ("which-key-add-keymap-based-replacements" function (:arguments ("keymap" "key" "replacement" "more")) nil [35593 36825])
            ("put" code nil nil [36826 36901])
            ("which-key-add-key-based-replacements" function (:arguments ("key-sequence" "replacement" "more")) nil [36918 38399])
            ("put" code nil nil [38400 38472])
            ("which-key-add-major-mode-key-based-replacements" function (:arguments ("mode" "key-sequence" "replacement" "more")) nil [38489 40215])
            ("put" code nil nil [40216 40304])
            ("which-key-define-key-recursively" function (:arguments ("map" "key" "def" "at-root")) nil [40306 40691])
            ("which-key--text-width-to-total" function (:arguments ("text-width")) nil [40735 41446])
            ("which-key--total-width-to-text" function (:arguments ("total-width")) nil [41448 42097])
            ("which-key--char-enlarged-p" function (:arguments ("_frame")) nil [42099 42255])
            ("which-key--char-reduced-p" function (:arguments ("_frame")) nil [42257 42412])
            ("which-key--char-exact-p" function (:arguments ("_frame")) nil [42414 42567])
            ("which-key--width-or-percentage-to-width" function (:arguments ("width-or-percentage")) nil [42569 43053])
            ("which-key--height-or-percentage-to-height" function (:arguments ("height-or-percentage")) nil [43055 43550])
            ("which-key--frame-size-changed-p" function nil nil [43552 43950])
            ("which-key--hide-popup" function nil nil [43984 44545])
            ("which-key--hide-popup-ignore-command" function nil nil [44547 44962])
            ("which-key--hide-popup-on-frame-size-change" function (:arguments ("_")) nil [44964 45174])
            ("which-key--hide-buffer-side-window" function nil nil [45176 45748])
            ("which-key--hide-buffer-frame" function nil nil [45750 45918])
            ("which-key--popup-showing-p" function nil nil [45920 46227])
            ("which-key--show-popup" function (:arguments ("act-popup-dim")) nil [46229 46924])
            ("which-key--fit-buffer-to-window-horizontally" function (:arguments ("window" "params")) nil [46926 47305])
            ("which-key--show-buffer-side-window" function (:arguments ("act-popup-dim")) nil [47307 48848])
            ("which-key--show-buffer-frame" function (:arguments ("act-popup-dim")) nil [48850 50142])
            ("which-key--show-buffer-new-frame" function (:arguments ("frame-height" "frame-width")) nil [50144 51319])
            ("which-key--show-buffer-reuse-frame" function (:arguments ("frame-height" "frame-width")) nil [51321 51693])
            ("which-key--popup-max-dimensions" function nil nil [51744 52279])
            ("which-key--minibuffer-max-dimensions" function nil nil [52281 52675])
            ("which-key--side-window-max-dimensions" function nil nil [52677 53684])
            ("which-key--frame-max-dimensions" function nil nil [53686 53890])
            ("which-key--string<" function (:arguments ("a" "b" "alpha")) nil [53915 54553])
            ("which-key--key-description<" function (:arguments ("a" "b" "alpha")) nil [54555 56548])
            ("which-key-key-order-alpha" function (:arguments ("acons" "bcons")) nil [56550 56940])
            ("which-key-key-order" function (:arguments ("acons" "bcons")) nil [56942 57249])
            ("which-key-description-order" function (:arguments ("acons" "bcons")) nil [57251 57447])
            ("which-key--group-p" function (:arguments ("description")) nil [57449 57617])
            ("which-key-prefix-then-key-order" function (:arguments ("acons" "bcons")) nil [57619 58030])
            ("which-key-prefix-then-key-order-reverse" function (:arguments ("acons" "bcons")) nil [58032 58448])
            ("which-key-local-then-key-order" function (:arguments ("acons" "bcons")) nil [58450 58860])
            ("which-key--string-width" function (:arguments ("maybe-string")) nil [58912 59097])
            ("which-key--butlast-string" function (:arguments ("str")) nil [59099 59199])
            ("which-key--match-replacement" function (:arguments ("key-binding" "replacement")) nil [59201 59820])
            ("which-key--replace-in-binding" function (:arguments ("key-binding" "repl")) nil [59822 60545])
            ("which-key--replace-in-repl-list-once" function (:arguments ("key-binding" "repls")) nil [60547 60779])
            ("which-key--replace-in-repl-list-many" function (:arguments ("key-binding" "repls")) nil [60781 61092])
            ("which-key--maybe-replace" function (:arguments ("key-binding")) nil [61094 62061])
            ("which-key--current-key-list" function (:arguments ("key-str")) nil [62063 62257])
            ("which-key--current-key-string" function (:arguments ("key-str")) nil [62259 62377])
            ("which-key--local-binding-p" function (:arguments ("keydesc")) nil [62379 62580])
            ("which-key--map-binding-p" function (:arguments ("map" "keydesc")) nil [62582 63296])
            ("which-key--maybe-get-prefix-title" function (:arguments ("keys")) nil [63298 64354])
            ("which-key--propertize" function (:arguments ("string" "properties")) nil [64356 64536])
            ("which-key--propertize-key" function (:arguments ("key")) nil [64538 65526])
            ("which-key--truncate-description" function (:arguments ("desc" "avl-width")) nil [65528 66236])
            ("which-key--highlight-face" function (:arguments ("description")) nil [66238 66867])
            ("which-key--propertize-description" function (:arguments ("description" "group" "local" "hl-face" "original-description")) nil [66869 68771])
            ("which-key--extract-key" function (:arguments ("key-str")) nil [68773 69090])
            ("which-key--maybe-add-docstring" function (:arguments ("current" "original")) nil [69092 70423])
            ("which-key--format-and-replace" function (:arguments ("unformatted" "preserve-full-key")) nil [70425 72052])
            ("which-key--compute-binding" function (:arguments ("binding")) nil [72054 72403])
            ("which-key--get-menu-item-binding" function (:arguments ("def")) nil [72405 72681])
            ("which-key--get-keymap-bindings-1" function (:arguments ("keymap" "start" "prefix" "filter" "all" "ignore-commands")) nil [72683 75134])
            ("which-key--get-keymap-bindings" function (:arguments ("keymap" "start" "prefix" "filter" "all" "evil")) nil [75136 75991])
            ("which-key--get-current-bindings" function (:arguments ("prefix" "filter")) nil [75993 76313])
            ("which-key--get-bindings" function (:arguments ("prefix" "keymap" "filter" "recursive")) nil [76315 77166])
            ("which-key--normalize-columns" function (:arguments ("columns")) nil [77221 77592])
            ("which-key--join-columns" function (:arguments ("columns")) nil [77594 77906])
            ("which-key--max-len" function (:arguments ("keys" "index" "initial-value")) nil [77908 78212])
            ("which-key--pad-column" function (:arguments ("col-keys" "avl-width")) nil [78214 79108])
            ("which-key--partition-list" function (:arguments ("n" "list")) nil [79110 79346])
            ("which-key--list-to-pages" function (:arguments ("keys" "avl-lines" "avl-width")) nil [79348 81138])
            ("which-key--create-pages-1" function (:arguments ("keys" "available-lines" "available-width" "min-lines" "vertical")) nil [81140 82244])
            ("which-key--create-pages" function (:arguments ("keys" "prefix-keys" "prefix-title")) nil [82246 84701])
            ("which-key--lighter-status" function nil nil [84703 85102])
            ("which-key--lighter-restore" function nil nil [85104 85308])
            ("which-key--echo" function (:arguments ("text")) nil [85310 85435])
            ("which-key--next-page-hint" function (:arguments ("prefix-keys")) nil [85437 86144])
            ("if" code nil nil [86166 86940])
            ("which-key--full-prefix" function (:arguments ("prefix-keys" "-prefix-arg" "dont-prop-keys")) nil [86943 87679])
            ("which-key--get-popup-map" function nil nil [87681 88109])
            ("which-key--process-page" function (:arguments ("pages-obj")) nil [88111 91436])
            ("which-key--show-page" function (:arguments ("n")) nil [91438 92827])
            ("which-key-reload-key-sequence" function (:arguments ("key-seq")) nil [92866 93392])
            ("which-key-turn-page" function (:arguments ("delta")) nil [93394 93751])
            ("which-key-show-standard-help" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [93768 94717])
            ("which-key-show-next-page-no-cycle" function (:user-visible-flag t) nil [94734 95033])
            ("which-key-show-previous-page-no-cycle" function (:user-visible-flag t) nil [95050 95300])
            ("which-key-show-next-page-cycle" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [95317 95524])
            ("which-key-show-previous-page-cycle" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [95541 95758])
            ("which-key-show-top-level" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [95775 95937])
            ("which-key-show-major-mode" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [95954 96594])
            ("which-key-show-full-major-mode" function (:user-visible-flag t) nil [96611 96903])
            ("which-key-dump-bindings" function
               (:user-visible-flag t
                :arguments ("prefix" "buffer-name"))
                nil [96920 97414])
            ("which-key-undo-key" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [97431 98162])
            ("defalias" code nil nil [98163 98210])
            ("which-key-abort" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [98212 98384])
            ("which-key-digit-argument" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [98386 98659])
            ("which-key-toggle-docstrings" function
               (:user-visible-flag t
                :arguments ("_"))
                nil [98661 98992])
            ("which-key-C-h-dispatch" function (:user-visible-flag t) nil [99009 101040])
            ("which-key--any-match-p" function (:arguments ("regexps" "string")) nil [101054 101261])
            ("which-key--try-2-side-windows" function (:arguments ("bindings" "prefix-keys" "prefix-title" "loc1" "loc2" "_ignore")) nil [101263 102152])
            ("which-key--read-keymap" function nil nil [102154 102784])
            ("which-key-show-keymap" function
               (:user-visible-flag t
                :arguments ("keymap" "no-paging"))
                nil [102801 103274])
            ("which-key-show-full-keymap" function
               (:user-visible-flag t
                :arguments ("keymap"))
                nil [103291 103620])
            ("which-key-show-minor-mode-keymap" function
               (:user-visible-flag t
                :arguments ("all"))
                nil [103637 104402])
            ("which-key-show-full-minor-mode-keymap" function (:user-visible-flag t) nil [104418 104638])
            ("which-key--show-keymap" function (:arguments ("keymap-name" "keymap" "prior-args" "all" "no-paging" "filter")) nil [104640 106022])
            ("which-key--evil-operator-filter" function (:arguments ("binding")) nil [106024 106204])
            ("which-key--show-evil-operator-keymap" function nil nil [106206 107950])
            ("which-key--create-buffer-and-show" function (:arguments ("prefix-keys" "from-keymap" "filter" "prefix-title")) nil [107952 109057])
            ("which-key--this-command-keys" function nil nil [109059 109815])
            ("which-key--update" function nil nil [109817 113179])
            ("which-key--start-timer" function (:arguments ("delay" "secondary")) nil [113193 113525])
            ("which-key--stop-timer" function nil nil [113527 113668])
            ("which-key--start-paging-timer" function nil nil [113670 114677])
            ("which-key" package nil nil [114679 114699]))          
      :file "which-key.el"
      :pointmax 114727
      :fsize 114740
      :lastmodtime '(25869 48202 116769 667000)
      :unmatched-syntax '((close-paren 86940 . 86941) (symbol 86147 . 86163) (open-paren 86146 . 86147))))
  :file "!Users!parkergabel!.emacs.d!straight!repos!emacs-which-key!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
