;; Object semanticdb-project-database-file-46359a88
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-46359a88"
  :tables
  (list
    (semanticdb-table "semanticdb-table-4ba3d398"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("doom-modeline-core" include nil nil [960 989])
            ("doom-modeline-env" include nil nil [990 1018])
            ("subr-x" include nil nil [1077 1094])
            ("seq" include nil nil [1060 1074])
            ("cl-lib" include nil nil [1040 1057])
            ("Info-current-file" variable nil nil [1119 1145])
            ("Info-current-node" variable nil nil [1146 1172])
            ("Info-mode-line-node-keymap" variable nil nil [1173 1208])
            ("anzu--cached-count" variable nil nil [1209 1236])
            ("anzu--current-position" variable nil nil [1237 1268])
            ("anzu--overflow-p" variable nil nil [1269 1294])
            ("anzu--state" variable nil nil [1295 1315])
            ("anzu--total-matched" variable nil nil [1316 1344])
            ("anzu-cons-mode-line-p" variable nil nil [1345 1375])
            ("aw-keys" variable nil nil [1376 1392])
            ("battery-echo-area-format" variable nil nil [1393 1426])
            ("battery-load-critical" variable nil nil [1427 1457])
            ("battery-mode-line-format" variable nil nil [1458 1491])
            ("battery-mode-line-limit" variable nil nil [1492 1524])
            ("battery-status-function" variable nil nil [1525 1557])
            ("boon-command-state" variable nil nil [1558 1585])
            ("boon-insert-state" variable nil nil [1586 1612])
            ("boon-off-state" variable nil nil [1613 1636])
            ("boon-special-state" variable nil nil [1637 1664])
            ("display-time-string" variable nil nil [1665 1693])
            ("edebug-execution-mode" variable nil nil [1694 1724])
            ("eglot--managed-mode" variable nil nil [1725 1753])
            ("erc-modified-channels-alist" variable nil nil [1754 1790])
            ("evil-ex-active-highlights-alist" variable nil nil [1791 1831])
            ("evil-ex-argument" variable nil nil [1832 1857])
            ("evil-ex-range" variable nil nil [1858 1880])
            ("evil-mc-frozen" variable nil nil [1881 1904])
            ("evil-state" variable nil nil [1905 1924])
            ("evil-visual-beginning" variable nil nil [1925 1955])
            ("evil-visual-end" variable nil nil [1956 1980])
            ("evil-visual-selection" variable nil nil [1981 2011])
            ("flycheck--automatically-enabled-checkers" variable nil nil [2012 2061])
            ("flycheck-current-errors" variable nil nil [2062 2094])
            ("flycheck-mode-menu-map" variable nil nil [2095 2126])
            ("flymake--mode-line-format" variable nil nil [2127 2161])
            ("flymake--state" variable nil nil [2162 2185])
            ("flymake-menu" variable nil nil [2186 2207])
            ("gnus-newsrc-alist" variable nil nil [2208 2234])
            ("gnus-newsrc-hashtb" variable nil nil [2235 2262])
            ("grip--process" variable nil nil [2263 2285])
            ("helm--mode-line-display-prefarg" variable nil nil [2286 2326])
            ("iedit-occurrences-overlays" variable nil nil [2327 2362])
            ("meow--indicator" variable nil nil [2363 2387])
            ("minions-mode-line-lighter" variable nil nil [2388 2422])
            ("minions-mode-line-minor-modes-map" variable nil nil [2423 2465])
            ("mlscroll-minimum-current-width" variable nil nil [2466 2505])
            ("mlscroll-right-align" variable nil nil [2506 2535])
            ("mu4e--modeline-item" variable nil nil [2536 2564])
            ("mu4e-alert-mode-line" variable nil nil [2565 2594])
            ("mu4e-alert-modeline-formatter" variable nil nil [2595 2633])
            ("mu4e-modeline-mode" variable nil nil [2634 2661])
            ("nyan-minimum-window-width" variable nil nil [2662 2696])
            ("objed--obj-state" variable nil nil [2697 2722])
            ("objed--object" variable nil nil [2723 2745])
            ("objed-modeline-setup-func" variable nil nil [2746 2780])
            ("persp-nil-name" variable nil nil [2781 2804])
            ("phi-replace--mode-line-format" variable nil nil [2805 2843])
            ("phi-search--overlays" variable nil nil [2844 2873])
            ("phi-search--selection" variable nil nil [2874 2904])
            ("phi-search-mode-line-format" variable nil nil [2905 2941])
            ("poke-line-minimum-window-width" variable nil nil [2942 2981])
            ("rcirc-activity" variable nil nil [2982 3005])
            ("sml-modeline-len" variable nil nil [3006 3031])
            ("symbol-overlay-keywords-alist" variable nil nil [3032 3070])
            ("symbol-overlay-temp-symbol" variable nil nil [3071 3106])
            ("text-scale-mode-amount" variable nil nil [3107 3138])
            ("tracking-buffers" variable nil nil [3139 3164])
            ("winum-auto-setup-mode-line" variable nil nil [3165 3200])
            ("xah-fly-insert-state-p" variable nil nil [3201 3232])
            ("declare-function" code nil nil [3234 3282])
            ("declare-function" code nil nil [3283 3332])
            ("declare-function" code nil nil [3333 3386])
            ("declare-function" code nil nil [3387 3429])
            ("declare-function" code nil nil [3430 3471])
            ("declare-function" code nil nil [3472 3509])
            ("declare-function" code nil nil [3510 3555])
            ("declare-function" code nil nil [3556 3606])
            ("declare-function" code nil nil [3607 3650])
            ("declare-function" code nil nil [3651 3694])
            ("declare-function" code nil nil [3695 3745])
            ("declare-function" code nil nil [3746 3793])
            ("declare-function" code nil nil [3794 3847])
            ("declare-function" code nil nil [3848 3896])
            ("declare-function" code nil nil [3897 3946])
            ("declare-function" code nil nil [3947 3991])
            ("declare-function" code nil nil [3992 4033])
            ("declare-function" code nil nil [4034 4087])
            ("declare-function" code nil nil [4088 4152])
            ("declare-function" code nil nil [4153 4203])
            ("declare-function" code nil nil [4204 4261])
            ("declare-function" code nil nil [4262 4320])
            ("declare-function" code nil nil [4321 4375])
            ("declare-function" code nil nil [4376 4426])
            ("declare-function" code nil nil [4427 4475])
            ("declare-function" code nil nil [4476 4520])
            ("declare-function" code nil nil [4521 4560])
            ("declare-function" code nil nil [4561 4605])
            ("declare-function" code nil nil [4606 4645])
            ("declare-function" code nil nil [4646 4682])
            ("declare-function" code nil nil [4683 4736])
            ("declare-function" code nil nil [4737 4795])
            ("declare-function" code nil nil [4796 4845])
            ("declare-function" code nil nil [4846 4897])
            ("declare-function" code nil nil [4898 4948])
            ("declare-function" code nil nil [4949 5014])
            ("declare-function" code nil nil [5015 5060])
            ("declare-function" code nil nil [5061 5107])
            ("declare-function" code nil nil [5108 5153])
            ("declare-function" code nil nil [5154 5204])
            ("declare-function" code nil nil [5205 5250])
            ("declare-function" code nil nil [5251 5305])
            ("declare-function" code nil nil [5306 5367])
            ("declare-function" code nil nil [5368 5427])
            ("declare-function" code nil nil [5428 5494])
            ("declare-function" code nil nil [5495 5555])
            ("declare-function" code nil nil [5556 5616])
            ("declare-function" code nil nil [5617 5677])
            ("declare-function" code nil nil [5678 5740])
            ("declare-function" code nil nil [5741 5802])
            ("declare-function" code nil nil [5803 5859])
            ("declare-function" code nil nil [5860 5920])
            ("declare-function" code nil nil [5921 5970])
            ("declare-function" code nil nil [5971 6029])
            ("declare-function" code nil nil [6030 6089])
            ("declare-function" code nil nil [6090 6139])
            ("declare-function" code nil nil [6140 6195])
            ("declare-function" code nil nil [6196 6268])
            ("declare-function" code nil nil [6269 6323])
            ("declare-function" code nil nil [6324 6377])
            ("declare-function" code nil nil [6378 6435])
            ("declare-function" code nil nil [6436 6491])
            ("declare-function" code nil nil [6492 6547])
            ("declare-function" code nil nil [6548 6610])
            ("declare-function" code nil nil [6611 6668])
            ("declare-function" code nil nil [6669 6727])
            ("declare-function" code nil nil [6728 6784])
            ("declare-function" code nil nil [6785 6841])
            ("declare-function" code nil nil [6842 6901])
            ("declare-function" code nil nil [6902 6959])
            ("declare-function" code nil nil [6960 7024])
            ("declare-function" code nil nil [7025 7089])
            ("declare-function" code nil nil [7090 7136])
            ("declare-function" code nil nil [7137 7185])
            ("declare-function" code nil nil [7186 7240])
            ("declare-function" code nil nil [7241 7293])
            ("declare-function" code nil nil [7294 7348])
            ("declare-function" code nil nil [7349 7404])
            ("declare-function" code nil nil [7405 7457])
            ("declare-function" code nil nil [7458 7523])
            ("declare-function" code nil nil [7524 7584])
            ("declare-function" code nil nil [7585 7657])
            ("declare-function" code nil nil [7658 7714])
            ("declare-function" code nil nil [7715 7773])
            ("declare-function" code nil nil [7774 7841])
            ("declare-function" code nil nil [7842 7897])
            ("declare-function" code nil nil [7898 7952])
            ("declare-function" code nil nil [7953 8007])
            ("declare-function" code nil nil [8008 8068])
            ("declare-function" code nil nil [8069 8124])
            ("declare-function" code nil nil [8125 8181])
            ("declare-function" code nil nil [8182 8230])
            ("declare-function" code nil nil [8231 8269])
            ("declare-function" code nil nil [8270 8331])
            ("declare-function" code nil nil [8332 8389])
            ("declare-function" code nil nil [8390 8442])
            ("declare-function" code nil nil [8443 8503])
            ("declare-function" code nil nil [8504 8578])
            ("declare-function" code nil nil [8579 8650])
            ("declare-function" code nil nil [8651 8697])
            ("declare-function" code nil nil [8698 8748])
            ("declare-function" code nil nil [8749 8794])
            ("declare-function" code nil nil [8795 8859])
            ("declare-function" code nil nil [8860 8912])
            ("declare-function" code nil nil [8913 8971])
            ("declare-function" code nil nil [8972 9020])
            ("declare-function" code nil nil [9021 9079])
            ("declare-function" code nil nil [9080 9131])
            ("declare-function" code nil nil [9132 9175])
            ("declare-function" code nil nil [9176 9219])
            ("declare-function" code nil nil [9220 9271])
            ("declare-function" code nil nil [9272 9322])
            ("declare-function" code nil nil [9323 9379])
            ("declare-function" code nil nil [9380 9440])
            ("declare-function" code nil nil [9441 9492])
            ("declare-function" code nil nil [9493 9550])
            ("declare-function" code nil nil [9551 9608])
            ("declare-function" code nil nil [9609 9669])
            ("declare-function" code nil nil [9670 9733])
            ("declare-function" code nil nil [9734 9799])
            ("declare-function" code nil nil [9800 9861])
            ("declare-function" code nil nil [9862 9911])
            ("declare-function" code nil nil [9912 9967])
            ("declare-function" code nil nil [9968 10022])
            ("declare-function" code nil nil [10023 10081])
            ("declare-function" code nil nil [10082 10132])
            ("declare-function" code nil nil [10133 10184])
            ("declare-function" code nil nil [10185 10236])
            ("declare-function" code nil nil [10237 10288])
            ("declare-function" code nil nil [10289 10363])
            ("declare-function" code nil nil [10364 10440])
            ("declare-function" code nil nil [10441 10517])
            ("declare-function" code nil nil [10518 10571])
            ("declare-function" code nil nil [10572 10627])
            ("declare-function" code nil nil [10628 10682])
            ("defvar-local" code nil nil [10716 10766])
            ("doom-modeline-update-buffer-file-icon" function (:arguments ("_")) nil [10767 11429])
            ("add-hook" code nil nil [11430 11496])
            ("add-hook" code nil nil [11497 11577])
            ("add-hook" code nil nil [11578 11656])
            ("doom-modeline-add-variable-watcher" code nil nil [11658 11920])
            ("doom-modeline-buffer-file-state-icon" function (:arguments ("icon" "unicode" "text" "face")) nil [11922 12206])
            ("defvar-local" code nil nil [12208 12264])
            ("doom-modeline-update-buffer-file-state-icon" function (:arguments ("_")) nil [12265 13775])
            ("defvar-local" code nil nil [13777 13827])
            ("doom-modeline-update-buffer-file-name" function (:arguments ("_")) nil [13828 14429])
            ("add-hook" code nil nil [14430 14496])
            ("add-hook" code nil nil [14497 14564])
            ("add-hook" code nil nil [14565 14643])
            ("add-hook" code nil nil [14644 14723])
            ("add-hook" code nil nil [14724 14795])
            ("advice-add" code nil nil [14796 14871])
            ("advice-add" code nil nil [14872 14955])
            ("advice-add" code nil nil [14956 15031])
            ("advice-add" code nil nil [15032 15106])
            ("advice-add" code nil nil [15107 15181])
            ("with-no-warnings" code nil nil [15350 15772])
            ("doom-modeline-add-variable-watcher" code nil nil [15774 16107])
            ("doom-modeline--buffer-mode-icon" function nil nil [16109 16658])
            ("doom-modeline--buffer-state-icon" function nil nil [16660 16986])
            ("doom-modeline--buffer-simple-name" function nil nil [16988 17558])
            ("doom-modeline--buffer-name" function nil nil [17560 18352])
            ("doom-modeline-def-segment" code nil nil [18354 18695])
            ("doom-modeline-def-segment" code nil nil [18697 18959])
            ("doom-modeline-def-segment" code nil nil [18961 19264])
            ("doom-modeline-def-segment" code nil nil [19266 20022])
            ("doom-modeline-def-segment" code nil nil [20024 20593])
            ("doom-modeline-def-segment" code nil nil [20615 22725])
            ("doom-modeline-def-segment" code nil nil [22750 23489])
            ("doom-modeline-def-segment" code nil nil [23513 23774])
            ("doom-modeline-def-segment" code nil nil [23798 24844])
            ("doom-modeline-def-segment" code nil nil [24865 24993])
            ("doom-modeline-def-segment" code nil nil [25018 26240])
            ("doom-modeline-vcs-icon" function (:arguments ("icon" "unicode" "text" "face")) nil [26257 26510])
            ("defvar-local" code nil nil [26512 26554])
            ("doom-modeline-update-vcs-icon" function (:arguments ("_")) nil [26555 27550])
            ("add-hook" code nil nil [27551 27609])
            ("add-hook" code nil nil [27610 27669])
            ("advice-add" code nil nil [27670 27740])
            ("doom-modeline-add-variable-watcher" code nil nil [27742 27996])
            ("doom-modeline-add-variable-watcher" code nil nil [27998 28276])
            ("defvar-local" code nil nil [28278 28320])
            ("doom-modeline-update-vcs-text" function (:arguments ("_")) nil [28321 29444])
            ("add-hook" code nil nil [29445 29503])
            ("add-hook" code nil nil [29504 29563])
            ("advice-add" code nil nil [29564 29634])
            ("doom-modeline-def-segment" code nil nil [29636 30243])
            ("doom-modeline-checker-icon" function (:arguments ("icon" "unicode" "text" "face")) nil [30264 30501])
            ("doom-modeline-checker-text" function (:arguments ("text" "face")) nil [30503 30635])
            ("doom-modeline--flycheck-count-errors" function nil nil [30650 31283])
            ("defvar-local" code nil nil [31285 31332])
            ("doom-modeline-update-flycheck-icon" function (:arguments ("status")) nil [31333 33911])
            ("add-hook" code nil nil [33912 33994])
            ("add-hook" code nil nil [33995 34062])
            ("doom-modeline-add-variable-watcher" code nil nil [34064 34374])
            ("doom-modeline-add-variable-watcher" code nil nil [34376 34710])
            ("defvar-local" code nil nil [34712 34759])
            ("doom-modeline-update-flycheck-text" function (:arguments ("status")) nil [34760 38590])
            ("add-hook" code nil nil [38591 38673])
            ("add-hook" code nil nil [38674 38741])
            ("doom-modeline-add-variable-watcher" code nil nil [38743 39087])
            ("with-eval-after-load" code nil nil [39213 39448])
            ("defvar-local" code nil nil [39450 39496])
            ("doom-modeline-update-flymake-icon" function (:arguments ("_")) nil [39497 43027])
            ("advice-add" code nil nil [43028 43108])
            ("doom-modeline-add-variable-watcher" code nil nil [43110 43418])
            ("doom-modeline-add-variable-watcher" code nil nil [43420 43752])
            ("defvar-local" code nil nil [43754 43800])
            ("doom-modeline-update-flymake-text" function (:arguments ("_")) nil [43801 48180])
            ("advice-add" code nil nil [48181 48261])
            ("doom-modeline-add-variable-watcher" code nil nil [48263 48605])
            ("doom-modeline-def-segment" code nil nil [48607 49501])
            ("doom-modeline-def-segment" code nil nil [49525 49949])
            ("doom-modeline-column" function (:arguments ("pos")) nil [49972 50121])
            ("doom-modeline-def-segment" code nil nil [50123 51769])
            ("doom-modeline--macro-recording" function nil nil [51862 53030])
            ("doom-modeline-fix-anzu-count" function (:arguments ("positions" "here")) nil [53128 53419])
            ("advice-add" code nil nil [53421 53496])
            ("setq" code nil nil [53498 53530])
            ("with-eval-after-load" code nil nil [53630 54133])
            ("doom-modeline--anzu" function nil nil [54135 54879])
            ("doom-modeline--evil-substitute" function nil nil [54881 55771])
            ("doom-modeline-themes--overlay-sort" function (:arguments ("a" "b")) nil [55773 55889])
            ("doom-modeline--iedit" function nil nil [55891 56823])
            ("doom-modeline--symbol-overlay" function nil nil [56825 57660])
            ("doom-modeline--multiple-cursors" function nil nil [57662 58751])
            ("doom-modeline--phi-search" function nil nil [58753 59195])
            ("doom-modeline--override-phi-search" function (:arguments ("orig-fun" "args")) nil [59197 59471])
            ("advice-add" code nil nil [59472 59554])
            ("doom-modeline--buffer-size" function nil nil [59556 60020])
            ("doom-modeline-def-segment" code nil nil [60022 60870])
            ("doom-modeline-def-segment" code nil nil [60872 60967])
            ("doom-modeline-def-segment" code nil nil [60985 61369])
            ("doom-modeline--bar-active" variable nil nil [61387 61425])
            ("doom-modeline--bar-inactive" variable nil nil [61426 61466])
            ("doom-modeline--bar" function nil nil [61468 62108])
            ("doom-modeline-refresh-bars" function nil nil [62110 62269])
            ("doom-modeline--hud-cache" type
               (:members ("active" "inactive" "top-margin" "bottom-margin")
                :type "struct")
                nil [62271 62351])
            ("doom-modeline--hud" function nil nil [62353 64104])
            ("doom-modeline-invalidate-huds" function nil nil [64106 64324])
            ("doom-modeline-add-variable-watcher" code nil nil [64326 64531])
            ("doom-modeline-add-variable-watcher" code nil nil [64533 64741])
            ("doom-modeline-add-variable-watcher" code nil nil [64743 64926])
            ("doom-modeline-add-variable-watcher" code nil nil [64928 65123])
            ("add-hook" code nil nil [65125 65198])
            ("add-hook" code nil nil [65199 65275])
            ("doom-modeline-def-segment" code nil nil [65277 65449])
            ("doom-modeline-def-segment" code nil nil [65451 65583])
            ("doom-modeline-aw-update" function nil nil [65680 66189])
            ("advice-add" code nil nil [66190 66250])
            ("add-hook" code nil nil [66315 66567])
            ("advice-add" code nil nil [66569 66637])
            ("advice-add" code nil nil [66638 66704])
            ("advice-add" code nil nil [66705 66763])
            ("advice-add" code nil nil [66764 66820])
            ("doom-modeline-def-segment" code nil nil [66822 67904])
            ("doom-modeline-def-segment" code nil nil [67927 69209])
            ("defvar-local" code nil nil [69234 69278])
            ("doom-modeline-update-persp-name" function (:arguments ("_")) nil [69279 71521])
            ("add-hook" code nil nil [71523 71592])
            ("add-hook" code nil nil [71593 71653])
            ("add-hook" code nil nil [71654 71725])
            ("add-hook" code nil nil [71726 71795])
            ("advice-add" code nil nil [71796 71862])
            ("doom-modeline-def-segment" code nil nil [71864 72020])
            ("doom-modeline-def-segment" code nil nil [72043 72449])
            ("doom-modeline-column-zero-based" variable (:default-value (if (boundp 'column-number-indicator-zero-based) column-number-indicator-zero-based t)) nil [72503 72748])
            ("doom-modeline-percent-position" variable (:default-value (if (boundp 'mode-line-percent-position) mode-line-percent-position '(-3 "%p"))) nil [72750 72984])
            ("doom-modeline-add-variable-watcher" code nil nil [72986 73161])
            ("doom-modeline-add-variable-watcher" code nil nil [73163 73329])
            ("doom-modeline-def-segment" code nil nil [73331 75946])
            ("doom-modeline-def-segment" code nil nil [75970 76272])
            ("doom-modeline--modal-icon" function (:arguments ("text" "face" "help-echo" "icon" "unicode")) nil [76342 76902])
            ("doom-modeline--evil" function nil nil [76904 78410])
            ("doom-modeline--overwrite" function nil nil [78412 78743])
            ("doom-modeline--god" function nil nil [78745 78995])
            ("doom-modeline--ryo" function nil nil [78997 79257])
            ("doom-modeline--xah-fly-keys" function nil nil [79259 79685])
            ("doom-modeline--boon" function nil nil [79687 80223])
            ("doom-modeline--meow" function nil nil [80225 80522])
            ("doom-modeline-def-segment" code nil nil [80524 81549])
            ("doom-modeline--objed-active" variable nil nil [81573 81613])
            ("doom-modeline-update-objed" function (:arguments ("_" "reset")) nil [81615 81774])
            ("setq" code nil nil [81776 81837])
            ("doom-modeline-def-segment" code nil nil [81839 82403])
            ("doom-modeline-def-segment" code nil nil [82429 83848])
            ("doom-modeline-def-segment" code nil nil [83866 84737])
            ("doom-modeline-repl-icon" function (:arguments ("text" "face")) nil [84755 84921])
            ("doom-modeline--cider" variable nil nil [84923 84956])
            ("doom-modeline-update-cider" function nil nil [84958 86159])
            ("add-hook" code nil nil [86161 86222])
            ("add-hook" code nil nil [86223 86287])
            ("add-hook" code nil nil [86288 86344])
            ("doom-modeline-def-segment" code nil nil [86346 86638])
            ("doom-modeline-lsp-icon" function (:arguments ("text" "face")) nil [86655 86819])
            ("defvar-local" code nil nil [86821 86858])
            ("doom-modeline-update-lsp" function (:arguments ("_")) nil [86859 88955])
            ("add-hook" code nil nil [88956 89021])
            ("add-hook" code nil nil [89022 89086])
            ("add-hook" code nil nil [89087 89159])
            ("add-hook" code nil nil [89160 89219])
            ("add-hook" code nil nil [89220 89278])
            ("defvar-local" code nil nil [89280 89319])
            ("doom-modeline-update-eglot" function nil nil [89320 92212])
            ("add-hook" code nil nil [92213 92277])
            ("defvar-local" code nil nil [92279 92317])
            ("doom-modeline-update-tags" function nil nil [92318 92675])
            ("add-hook" code nil nil [92676 92731])
            ("doom-modeline-update-lsp-icon" function nil nil [92733 93033])
            ("doom-modeline-add-variable-watcher" code nil nil [93035 93289])
            ("doom-modeline-add-variable-watcher" code nil nil [93291 93569])
            ("doom-modeline-def-segment" code nil nil [93571 94093])
            ("doom-modeline-override-eglot" function nil nil [94095 94481])
            ("add-hook" code nil nil [94482 94548])
            ("add-hook" code nil nil [94549 94615])
            ("doom-modeline-add-variable-watcher" code nil nil [94617 94801])
            ("doom-modeline--github-notification-number" variable nil nil [94821 94873])
            ("doom-modeline-before-github-fetch-notification-hook" variable nil nil [94874 95105])
            ("doom-modeline--github-fetch-notifications" function nil nil [95106 96309])
            ("doom-modeline--github-timer" variable nil nil [96311 96351])
            ("doom-modeline-github-timer" function nil nil [96352 96780])
            ("doom-modeline-add-variable-watcher" code nil nil [96782 96966])
            ("doom-modeline-github-timer" code nil nil [96968 96996])
            ("doom-modeline-def-segment" code nil nil [96998 98742])
            ("defvar-local" code nil nil [98816 98862])
            ("doom-modeline--debug-visual" function (:arguments ("_")) nil [98863 99215])
            ("doom-modeline--normal-visual" function (:arguments ("_")) nil [99217 99543])
            ("add-hook" code nil nil [99545 99611])
            ("add-hook" code nil nil [99612 99674])
            ("doom-modeline-debug-icon" function (:arguments ("face")) nil [99676 99824])
            ("doom-modeline--debug-dap" function nil nil [99826 100959])
            ("defvar-local" code nil nil [100961 101004])
            ("doom-modeline-update-debug-dap" function (:arguments ("_")) nil [101005 101142])
            ("add-hook" code nil nil [101144 101213])
            ("add-hook" code nil nil [101214 101283])
            ("add-hook" code nil nil [101284 101348])
            ("doom-modeline--debug-edebug" function nil nil [101350 102177])
            ("doom-modeline--debug-on-error" function nil nil [102179 102567])
            ("doom-modeline--debug-on-quit" function nil nil [102569 102952])
            ("doom-modeline-def-segment" code nil nil [102954 103658])
            ("defvar-local" code nil nil [103681 103724])
            ("doom-modeline-update-pdf-pages" function nil nil [103725 103950])
            ("add-hook" code nil nil [103951 104021])
            ("doom-modeline-def-segment" code nil nil [104023 104110])
            ("doom-modeline-def-segment" code nil nil [104144 106214])
            ("doom-modeline-override-mu4e-alert" function (:arguments ("_")) nil [106216 106844])
            ("advice-add" code nil nil [106845 106950])
            ("add-hook" code nil nil [106951 107022])
            ("doom-modeline-override-mu4e-modeline" function (:arguments ("_")) nil [107024 107499])
            ("add-hook" code nil nil [107500 107574])
            ("add-hook" code nil nil [107575 107649])
            ("doom-modeline-add-variable-watcher" code nil nil [107651 107882])
            ("doom-modeline--gnus-unread-mail" variable nil nil [107916 107958])
            ("doom-modeline--gnus-started" variable nil nil [107959 108042])
            ("doom-modeline-update-gnus-status" function (:arguments ("_")) nil [108043 108831])
            ("add-hook" code nil nil [108885 108954])
            ("add-hook" code nil nil [108955 109026])
            ("add-hook" code nil nil [109027 109102])
            ("add-hook" code nil nil [109103 109182])
            ("doom-modeline-start-gnus-listener" function nil nil [109246 109685])
            ("add-hook" code nil nil [109686 109751])
            ("doom-modeline-stop-gnus-listener" function nil nil [109796 109904])
            ("add-hook" code nil nil [109905 109971])
            ("doom-modeline-def-segment" code nil nil [109973 111149])
            ("doom-modeline--shorten-irc" function (:arguments ("name")) nil [111180 111940])
            ("doom-modeline--tracking-buffers" function (:arguments ("buffers")) nil [111942 112651])
            ("doom-modeline--circe-p" function nil nil [112653 112757])
            ("doom-modeline--erc-p" function nil nil [112759 112860])
            ("doom-modeline--rcirc-p" function nil nil [112862 112971])
            ("doom-modeline--get-buffers" function nil nil [112973 113354])
            ("doom-modeline-def-segment" code nil nil [113427 113846])
            ("doom-modeline-def-segment" code nil nil [113848 117070])
            ("doom-modeline-override-rcirc" function nil nil [117072 117516])
            ("add-hook" code nil nil [117517 117587])
            ("add-hook" code nil nil [117588 117654])
            ("doom-modeline-add-variable-watcher" code nil nil [117656 117836])
            ("doom-modeline-battery-icon" function (:arguments ("icon" "unicode" "text" "face")) nil [117864 118101])
            ("doom-modeline--battery-status" variable nil nil [118103 118145])
            ("doom-modeline-update-battery-status" function nil nil [118146 124047])
            ("doom-modeline-add-variable-watcher" code nil nil [124049 124238])
            ("doom-modeline-add-variable-watcher" code nil nil [124240 124453])
            ("doom-modeline-def-segment" code nil nil [124455 124881])
            ("doom-modeline-override-battery" function nil nil [124883 125664])
            ("add-hook" code nil nil [125665 125735])
            ("add-hook" code nil nil [125736 125804])
            ("doom-modeline-add-variable-watcher" code nil nil [125806 125996])
            ("doom-modeline-def-segment" code nil nil [126029 126679])
            ("doom-modeline--helm-buffer-ids" variable (:default-value '(("*helm*" . "HELM") ("*helm M-x*" . "HELM M-x") ("*swiper*" . "SWIPER") ("*Projectile Perspectives*" . "HELM Projectile Perspectives") ("*Projectile Layouts*" . "HELM Projectile Layouts") ("*helm-ag*" lambda nil (format "HELM Ag: Using %s" (car (split-string helm-ag-base-command)))))) nil [126697 127203])
            ("doom-modeline-def-segment" code nil nil [127205 128223])
            ("doom-modeline-def-segment" code nil nil [128225 128703])
            ("doom-modeline-def-segment" code nil nil [128705 129225])
            ("doom-modeline-def-segment" code nil nil [129227 129604])
            ("doom-modeline--helm-current-source" variable nil nil [129606 129691])
            ("doom-modeline-def-segment" code nil nil [129692 129922])
            ("doom-modeline-def-segment" code nil nil [129950 130194])
            ("doom-modeline-def-segment" code nil nil [130227 131394])
            ("doom-modeline-def-segment" code nil nil [131418 131826])
            ("doom-modeline-def-segment" code nil nil [131851 132453])
            ("doom-modeline-override-time" function nil nil [132455 132839])
            ("add-hook" code nil nil [132840 132904])
            ("add-hook" code nil nil [132905 132970])
            ("doom-modeline-add-variable-watcher" code nil nil [132972 133153])
            ("doom-modeline-def-segment" code nil nil [133177 133646])
            ("doom-modeline-def-segment" code nil nil [133664 133804])
            ("doom-modeline-eldoc-minibuffer-message" function (:arguments ("format-string" "args")) nil [133806 134826])
            ("doom-modeline-segments" package nil nil [134828 134861]))          
      :file "doom-modeline-segments.el"
      :pointmax 134903
      :fsize 135068
      :lastmodtime '(25869 48051 745331 190000)
      :unmatched-syntax '((close-paren 1094 . 1095) (symbol 1020 . 1037) (open-paren 1019 . 1020)))
    (semanticdb-table "semanticdb-table-4b9bcd80"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("compat" include nil nil [908 925])
            ("subr-x" include nil nil [967 984])
            ("cl-lib" include nil nil [947 964])
            ("nerd-icons" include nil nil [986 1007])
            ("shrink-path" include nil nil [1008 1030])
            ("unless" code nil nil [1058 1696])
            ("when" code nil nil [1763 1840])
            ("doom-modeline" customgroup (:user-visible-flag t) nil [1868 2034])
            ("doom-modeline-support-imenu" variable nil nil [2036 2538])
            ("doom-modeline-height" variable (:default-value (+ (frame-char-height) 4)) nil [2540 2778])
            ("doom-modeline-bar-width" variable (:default-value 4) nil [2780 2994])
            ("doom-modeline-hud" variable nil nil [2996 3145])
            ("doom-modeline-hud-min-height" variable (:default-value 2) nil [3147 3377])
            ("doom-modeline-window-width-limit" variable (:default-value 85) nil [3379 3721])
            ("doom-modeline-project-detection" variable (:default-value 'auto) nil [3723 4364])
            ("doom-modeline-buffer-file-name-style" variable (:default-value 'auto) nil [4366 5634])
            ("doom-modeline-buffer-file-true-name" variable nil nil [5636 5916])
            ("doom-modeline-icon" variable (:default-value t) nil [5918 6109])
            ("doom-modeline-major-mode-icon" variable (:default-value t) nil [6111 6285])
            ("doom-modeline-major-mode-color-icon" variable (:default-value t) nil [6287 6471])
            ("doom-modeline-buffer-state-icon" variable (:default-value t) nil [6473 6654])
            ("doom-modeline-buffer-modification-icon" variable (:default-value t) nil [6656 6889])
            ("doom-modeline-time-icon" variable (:default-value t) nil [6891 7048])
            ("doom-modeline-unicode-fallback" variable nil nil [7050 7219])
            ("doom-modeline-buffer-name" variable (:default-value t) nil [7221 7338])
            ("doom-modeline-highlight-modified-buffer-name" variable (:default-value t) nil [7340 7487])
            ("doom-modeline-minor-modes" variable nil nil [7489 7625])
            ("doom-modeline-enable-word-count" variable nil nil [7627 7798])
            ("doom-modeline-continuous-word-count-modes" variable (:default-value '(markdown-mode gfm-mode org-mode)) nil [7800 8069])
            ("doom-modeline-buffer-encoding" variable (:default-value t) nil [8071 8323])
            ("doom-modeline-default-coding-system" variable (:default-value 'utf-8) nil [8325 8502])
            ("doom-modeline-default-eol-type" variable nil nil [8504 8788])
            ("doom-modeline-indent-info" variable nil nil [8790 8921])
            ("doom-modeline-total-line-number" variable nil nil [8923 9054])
            ("doom-modeline-indent-alist" variable (:default-value '((apache-mode apache-indent-level) (awk-mode c-basic-offset) (bpftrace-mode c-basic-offset) (c++-mode c-basic-offset) (c-mode c-basic-offset) (cmake-mode cmake-tab-width) (coffee-mode coffee-tab-width) (cperl-mode cperl-indent-level) (crystal-mode crystal-indent-level) (csharp-mode c-basic-offset) (css-mode css-indent-offset) (d-mode c-basic-offset) (emacs-lisp-mode lisp-indent-offset) (enh-ruby-mode enh-ruby-indent-level) (erlang-mode erlang-indent-level) (ess-mode ess-indent-offset) (f90-mode f90-associate-indent f90-continuation-indent f90-critical-indent f90-do-indent f90-if-indent f90-program-indent f90-type-indent) (feature-mode feature-indent-offset feature-indent-level) (fsharp-mode fsharp-continuation-offset fsharp-indent-level fsharp-indent-offset) (groovy-mode groovy-indent-offset) (haskell-mode haskell-indent-spaces haskell-indent-offset haskell-indentation-layout-offset haskell-indentation-left-offset haskell-indentation-starter-offset haskell-indentation-where-post-offset haskell-indentation-where-pre-offset shm-indent-spaces) (haxor-mode haxor-tab-width) (idl-mode c-basic-offset) (jade-mode jade-tab-width) (java-mode c-basic-offset) (js-mode js-indent-level) (js-jsx-mode js-indent-level sgml-basic-offset) (js2-mode js2-basic-offset) (js2-jsx-mode js2-basic-offset sgml-basic-offset) (js3-mode js3-indent-level) (json-mode js-indent-level) (julia-mode julia-indent-offset) (kotlin-mode kotlin-tab-width) (latex-mode tex-indent-basic) (lisp-mode lisp-indent-offset) (livescript-mode livescript-tab-width) (lua-mode lua-indent-level) (matlab-mode matlab-indent-level) (mips-mode mips-tab-width) (mustache-mode mustache-basic-offset) (nasm-mode nasm-basic-offset) (nginx-mode nginx-indent-level) (nxml-mode nxml-child-indent) (objc-mode c-basic-offset) (octave-mode octave-block-offset) (perl-mode perl-indent-level) (php-mode c-basic-offset) (pike-mode c-basic-offset) (ps-mode ps-mode-tab) (pug-mode pug-tab-width) (puppet-mode puppet-indent-level) (python-mode python-indent-offset) (ruby-mode ruby-indent-level) (rust-mode rust-indent-offset) (rustic-mode rustic-indent-offset) (scala-mode scala-indent:step) (scss-mode css-indent-offset) (sgml-mode sgml-basic-offset) (sh-mode sh-basic-offset sh-indentation) (slim-mode slim-indent-offset) (sml-mode sml-indent-level) (tcl-mode tcl-indent-level tcl-continued-indent-level) (terra-mode terra-indent-level) (typescript-mode typescript-indent-level) (verilog-mode verilog-indent-level verilog-indent-level-behavioral verilog-indent-level-declaration verilog-indent-level-module verilog-cexp-indent verilog-case-indent) (web-mode web-mode-attr-indent-offset web-mode-attr-value-indent-offset web-mode-code-indent-offset web-mode-css-indent-offset web-mode-markup-indent-offset web-mode-sql-indent-offset web-mode-block-padding web-mode-script-padding web-mode-style-padding) (yaml-mode yaml-indent-offset))) nil [9229 13243])
            ("doom-modeline-checker-simple-format" variable (:default-value t) nil [13245 13414])
            ("doom-modeline-number-limit" variable (:default-value 99) nil [13416 13550])
            ("doom-modeline-vcs-max-length" variable (:default-value 12) nil [13552 13708])
            ("doom-modeline-workspace-name" variable (:default-value t) nil [13710 13871])
            ("doom-modeline-persp-name" variable (:default-value t) nil [13873 14032])
            ("doom-modeline-display-default-persp-name" variable nil nil [14034 14206])
            ("doom-modeline-persp-icon" variable (:default-value t) nil [14208 14361])
            ("doom-modeline-repl" variable (:default-value t) nil [14363 14512])
            ("doom-modeline-lsp" variable (:default-value t) nil [14514 14661])
            ("doom-modeline-github" variable nil nil [14663 14828])
            ("doom-modeline-github-interval" variable (:default-value 1800) nil [14830 14966])
            ("doom-modeline-env-version" variable (:default-value t) nil [14968 15093])
            ("doom-modeline-modal" variable (:default-value t) nil [15095 15276])
            ("doom-modeline-modal-icon" variable (:default-value t) nil [15278 15469])
            ("doom-modeline-modal-modern-icon" variable (:default-value t) nil [15471 15606])
            ("doom-modeline-always-show-macro-register" variable nil nil [15608 15783])
            ("doom-modeline-mu4e" variable nil nil [15785 15939])
            ("doom-modeline-gnus" variable nil nil [15941 16096])
            ("doom-modeline-gnus-timer" variable (:default-value 2) nil [16098 16262])
            ("doom-modeline-gnus-idle" variable nil nil [16264 16736])
            ("doom-modeline-gnus-excluded-groups" variable nil nil [16738 16939])
            ("doom-modeline-irc" variable (:default-value t) nil [16941 17095])
            ("doom-modeline-irc-buffers" variable nil nil [17097 17223])
            ("doom-modeline-irc-stylize" variable (:default-value 'identity) nil [17225 17360])
            ("doom-modeline-battery" variable (:default-value t) nil [17362 17515])
            ("doom-modeline-time" variable (:default-value t) nil [17517 17654])
            ("doom-modeline-display-misc-in-all-mode-lines" variable (:default-value t) nil [17656 17861])
            ("doom-modeline-always-visible-segments" variable nil nil [17863 18037])
            ("doom-modeline-faces" customgroup (:user-visible-flag t) nil [18057 18247])
            ("doom-modeline" variable
               (:default-value '((t nil))
                :type "face")
                nil [18249 18332])
            ("doom-modeline-emphasis" variable
               (:default-value '((t (:inherit (doom-modeline mode-line-emphasis))))
                :type "face")
                nil [18334 18479])
            ("doom-modeline-highlight" variable
               (:default-value '((t (:inherit (doom-modeline mode-line-highlight))))
                :type "face")
                nil [18481 18632])
            ("doom-modeline-buffer-path" variable
               (:default-value '((t (:inherit (doom-modeline-emphasis bold))))
                :type "face")
                nil [18634 18804])
            ("doom-modeline-buffer-file" variable
               (:default-value '((t (:inherit (doom-modeline mode-line-buffer-id bold))))
                :type "face")
                nil [18806 18998])
            ("doom-modeline-buffer-modified" variable
               (:default-value '((t (:inherit (doom-modeline warning bold) :background unspecified)))
                :type "face")
                nil [19000 19205])
            ("doom-modeline-buffer-major-mode" variable
               (:default-value '((t (:inherit (doom-modeline-emphasis bold))))
                :type "face")
                nil [19207 19387])
            ("doom-modeline-buffer-minor-mode" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-doc-face) :weight normal :slant normal)))
                :type "face")
                nil [19389 19604])
            ("doom-modeline-project-parent-dir" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-comment-face bold))))
                :type "face")
                nil [19606 19819])
            ("doom-modeline-project-dir" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-string-face bold))))
                :type "face")
                nil [19821 20019])
            ("doom-modeline-project-root-dir" variable
               (:default-value '((t (:inherit (doom-modeline-emphasis bold))))
                :type "face")
                nil [20021 20206])
            ("doom-modeline-panel" variable
               (:default-value '((t (:inherit doom-modeline-highlight)))
                :type "face")
                nil [20208 20409])
            ("doom-modeline-host" variable
               (:default-value '((t (:inherit (doom-modeline italic))))
                :type "face")
                nil [20411 20556])
            ("doom-modeline-input-method" variable
               (:default-value '((t (:inherit (doom-modeline-emphasis))))
                :type "face")
                nil [20558 20713])
            ("doom-modeline-input-method-alt" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-doc-face) :slant normal)))
                :type "face")
                nil [20715 20910])
            ("doom-modeline-debug" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-doc-face) :slant normal)))
                :type "face")
                nil [20912 21119])
            ("doom-modeline-info" variable
               (:default-value '((t (:inherit (doom-modeline success))))
                :type "face")
                nil [21121 21301])
            ("doom-modeline-warning" variable
               (:default-value '((t (:inherit (doom-modeline warning))))
                :type "face")
                nil [21303 21475])
            ("doom-modeline-urgent" variable
               (:default-value '((t (:inherit (doom-modeline error))))
                :type "face")
                nil [21477 21644])
            ("doom-modeline-notification" variable
               (:default-value '((t (:inherit doom-modeline-warning)))
                :type "face")
                nil [21646 21875])
            ("doom-modeline-unread-number" variable
               (:default-value '((t (:inherit doom-modeline :slant italic)))
                :type "face")
                nil [21877 22064])
            ("doom-modeline-bar" variable
               (:default-value '((t (:inherit doom-modeline-highlight)))
                :type "face")
                nil [22066 22245])
            ("doom-modeline-bar-inactive" variable
               (:default-value `((t (:inherit doom-modeline)))
                :type "face")
                nil [22247 22427])
            ("doom-modeline-debug-visual" variable
               (:default-value '((((background light)) :foreground "#D4843E" :inherit doom-modeline) (((background dark)) :foreground "#915B2D" :inherit doom-modeline))
                :type "face")
                nil [22429 22690])
            ("doom-modeline-evil-emacs-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-builtin-face))))
                :type "face")
                nil [22692 22873])
            ("doom-modeline-evil-insert-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-keyword-face))))
                :type "face")
                nil [22875 23058])
            ("doom-modeline-evil-motion-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-doc-face) :slant normal)))
                :type "face")
                nil [23060 23253])
            ("doom-modeline-evil-normal-state" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [23255 23418])
            ("doom-modeline-evil-operator-state" variable
               (:default-value '((t (:inherit (doom-modeline mode-line))))
                :type "face")
                nil [23420 23594])
            ("doom-modeline-evil-visual-state" variable
               (:default-value '((t (:inherit doom-modeline-warning)))
                :type "face")
                nil [23596 23762])
            ("doom-modeline-evil-replace-state" variable
               (:default-value '((t (:inherit doom-modeline-urgent)))
                :type "face")
                nil [23764 23931])
            ("doom-modeline-overwrite" variable
               (:default-value '((t (:inherit doom-modeline-urgent)))
                :type "face")
                nil [23933 24071])
            ("doom-modeline-god" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [24073 24202])
            ("doom-modeline-ryo" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [24204 24328])
            ("doom-modeline-fly-insert-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-keyword-face))))
                :type "face")
                nil [24330 24516])
            ("doom-modeline-fly-normal-state" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [24518 24684])
            ("doom-modeline-boon-command-state" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [24686 24851])
            ("doom-modeline-boon-insert-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-keyword-face))))
                :type "face")
                nil [24853 25036])
            ("doom-modeline-boon-special-state" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-builtin-face))))
                :type "face")
                nil [25038 25223])
            ("doom-modeline-boon-off-state" variable
               (:default-value '((t (:inherit (doom-modeline mode-line))))
                :type "face")
                nil [25225 25389])
            ("doom-modeline-persp-name" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-comment-face italic))))
                :type "face")
                nil [25391 25550])
            ("doom-modeline-persp-buffer-not-in-persp" variable
               (:default-value '((t (:inherit (doom-modeline font-lock-doc-face italic))))
                :type "face")
                nil [25552 25746])
            ("doom-modeline-repl-success" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [25748 25886])
            ("doom-modeline-repl-warning" variable
               (:default-value '((t (:inherit doom-modeline-warning)))
                :type "face")
                nil [25888 26029])
            ("doom-modeline-lsp-success" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [26031 26167])
            ("doom-modeline-lsp-warning" variable
               (:default-value '((t (:inherit doom-modeline-warning)))
                :type "face")
                nil [26169 26308])
            ("doom-modeline-lsp-error" variable
               (:default-value '((t (:inherit doom-modeline-urgent)))
                :type "face")
                nil [26310 26444])
            ("doom-modeline-lsp-running" variable
               (:default-value '((t (:inherit (doom-modeline compilation-mode-line-run) :weight normal :slant normal)))
                :type "face")
                nil [26446 26634])
            ("doom-modeline-battery-charging" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [26636 26783])
            ("doom-modeline-battery-full" variable
               (:default-value '((t (:inherit doom-modeline-info)))
                :type "face")
                nil [26785 26924])
            ("doom-modeline-battery-normal" variable
               (:default-value '((t (:inherit (doom-modeline mode-line))))
                :type "face")
                nil [26926 27076])
            ("doom-modeline-battery-warning" variable
               (:default-value '((t (:inherit doom-modeline-warning)))
                :type "face")
                nil [27078 27226])
            ("doom-modeline-battery-critical" variable
               (:default-value '((t (:inherit doom-modeline-urgent)))
                :type "face")
                nil [27228 27377])
            ("doom-modeline-battery-error" variable
               (:default-value '((t (:inherit doom-modeline-urgent)))
                :type "face")
                nil [27379 27522])
            ("doom-modeline-buffer-timemachine" variable
               (:default-value '((t (:inherit doom-modeline-buffer-file :slant italic)))
                :type "face")
                nil [27524 27689])
            ("doom-modeline-time" variable
               (:default-value '((t (:inherit doom-modeline-buffer-file)))
                :type "face")
                nil [27691 27822])
            ("doom-modeline-compilation" variable
               (:default-value '((t (:inherit doom-modeline-warning :slant italic :height 0.9)))
                :type "face")
                nil [27824 27992])
            ("declare-function" code nil nil [28015 28073])
            ("declare-function" code nil nil [28074 28137])
            ("declare-function" code nil nil [28138 28179])
            ("declare-function" code nil nil [28180 28239])
            ("doom-modeline-add-font-lock" function nil nil [28263 28518])
            ("doom-modeline-add-font-lock" code nil nil [28519 28548])
            ("doom-modeline-add-imenu" function nil nil [28550 29073])
            ("unless" code nil nil [29277 30429])
            ("with-eval-after-load" code nil nil [30467 30630])
            ("doom-modeline-icon-displayable-p" function nil nil [30632 30770])
            ("doom-modeline-mwheel-available-p" function nil nil [30772 30916])
            ("doom-modeline--selected-window" function nil nil [30968 31064])
            ("doom-modeline-current-window" variable (:default-value (doom-modeline--selected-window)) nil [31066 31156])
            ("doom-modeline--active" function nil nil [31158 31499])
            ("defvar-local" code nil nil [31501 31550])
            ("doom-modeline--segment-visible" function (:arguments ("name")) nil [31552 31776])
            ("doom-modeline-set-selected-window" function (:arguments ("_")) nil [31778 32079])
            ("doom-modeline-unset-selected-window" function nil nil [32081 32225])
            ("add-hook" code nil nil [32227 32298])
            ("doom-modeline--remap-faces" variable (:default-value '(mode-line mode-line-active mode-line-emphasis mode-line-highlight mode-line-buffer-id doom-modeline solaire-mode-line-face solaire-mode-line-active-face paradox-mode-line-face flycheck-color-mode-line-error-face flycheck-color-mode-line-warning-face flycheck-color-mode-line-info-face flycheck-color-mode-line-success-face)) nil [32355 33160])
            ("doom-modeline--remap-face-cookie-alist" variable nil nil [33162 33213])
            ("doom-modeline-focus" function nil nil [33214 33342])
            ("doom-modeline-unfocus" function nil nil [33344 33570])
            ("with-no-warnings" code nil nil [33572 34427])
            ("doom-modeline-fn-alist" variable nil nil [34446 34480])
            ("doom-modeline-var-alist" variable nil nil [34481 34516])
            ("doom-modeline-def-segment" function (:arguments ("name" "body")) nil [34518 35497])
            ("doom-modeline--prepare-segments" function (:arguments ("segments")) nil [35499 36089])
            ("doom-modeline-def-modeline" function (:arguments ("name" "lhs" "rhs")) nil [36091 38519])
            ("put" code nil nil [38520 38582])
            ("doom-modeline" function (:arguments ("key")) nil [38584 38833])
            ("doom-modeline-set-modeline" function (:arguments ("key" "default")) nil [38835 39214])
            ("doom-modeline-ellipsis" variable
               (:constant-flag t
                :default-value (if (char-displayable-p 8230) "…" "..."))
                nil [39234 39322])
            ("doom-modeline-spc" function nil nil [39324 39417])
            ("doom-modeline-wspc" function nil nil [39419 39519])
            ("doom-modeline-vspc" function nil nil [39521 39688])
            ("doom-modeline-face" function (:arguments ("face" "inactive-face")) nil [39690 40224])
            ("doom-modeline-string-pixel-width" function (:arguments ("str")) nil [40226 40492])
            ("doom-modeline--font-height" function nil nil [40494 40858])
            ("doom-modeline--original-value" function (:arguments ("sym")) nil [40860 41183])
            ("doom-modeline-add-variable-watcher" function (:arguments ("symbol" "watch-function")) nil [41185 41448])
            ("doom-modeline-propertize-icon" function (:arguments ("icon" "face")) nil [41450 42327])
            ("doom-modeline-icon" function (:arguments ("icon-set" "icon-name" "unicode" "text" "args")) nil [42329 43511])
            ("doom-modeline-icon-for-buffer" function nil nil [43513 43635])
            ("doom-modeline-display-icon" function (:arguments ("icon")) nil [43637 43812])
            ("doom-modeline-display-text" function (:arguments ("text")) nil [43814 43976])
            ("doom-modeline--create-bar-image" function (:arguments ("face" "width" "height")) nil [43978 44596])
            ("doom-modeline--create-hud-image" function (:arguments ("face1" "face2" "width" "height" "top-margin" "bottom-margin")) nil [44598 45885])
            ("doom-modeline-window-size-change-function" function (:arguments ("_")) nil [45951 46396])
            ("add-hook" code nil nil [46398 46471])
            ("add-hook" code nil nil [46472 46551])
            ("add-hook" code nil nil [46552 46636])
            ("defvar-local" code nil nil [46638 46684])
            ("doom-modeline--project-root" function nil nil [46685 47660])
            ("doom-modeline-project-p" function nil nil [47662 47767])
            ("doom-modeline-project-root" function nil nil [47769 47959])
            ("doom-modeline-buffer-file-name" function nil nil [47961 50695])
            ("doom-modeline--buffer-file-name-truncate" function (:arguments ("file-path" "true-file-path" "truncate-tail")) nil [50697 51520])
            ("doom-modeline--buffer-file-name-relative" function (:arguments ("_file-path" "true-file-path" "include-project")) nil [51522 52366])
            ("doom-modeline--buffer-file-name" function (:arguments ("file-path" "true-file-path" "truncate-project-root-parent" "truncate-project-relative-path" "hide-project-root-parent")) nil [52368 54859])
            ("doom-modeline-core" package nil nil [54861 54890]))          
      :file "doom-modeline-core.el"
      :pointmax 54928
      :fsize 54933
      :lastmodtime '(25869 48051 744691 311000)
      :unmatched-syntax '((close-paren 984 . 985) (symbol 927 . 944) (open-paren 926 . 927)))
    (semanticdb-table "semanticdb-table-4b9ddd9a"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("doom-modeline-core" include nil nil [916 945])
            ("subr-x" include nil nil [967 984])
            ("python-shell-interpreter" variable nil nil [1002 1035])
            ("doom-modeline-env" customgroup (:user-visible-flag t) nil [1057 1243])
            ("doom-modeline-env-load-string" variable (:default-value doom-modeline-ellipsis) nil [1245 1421])
            ("doom-modeline-before-update-env-hook" variable nil nil [1423 1583])
            ("doom-modeline-after-update-env-hook" variable nil nil [1585 1743])
            ("defvar-local" code nil nil [1840 1961])
            ("defvar-local" code nil nil [1963 2096])
            ("defvar-local" code nil nil [2098 2246])
            ("defvar-local" code nil nil [2248 2411])
            ("doom-modeline-update-env" function nil nil [2438 3305])
            ("add-hook" code nil nil [3307 3360])
            ("with-no-warnings" code nil nil [3361 3637])
            ("doom-modeline-env--get" function (:arguments ("prog" "args" "callback")) nil [3639 4587])
            ("doom-modeline-def-env" function (:arguments ("name" "hooks" "command" "parser")) nil [4589 7883])
            ("doom-modeline-def-env" code nil nil [8036 9766])
            ("doom-modeline-def-env" code nil nil [9844 10176])
            ("doom-modeline-def-env" code nil nil [10254 10631])
            ("doom-modeline-def-env" code nil nil [10707 11035])
            ("doom-modeline-def-env" code nil nil [11115 11320])
            ("doom-modeline-def-env" code nil nil [11398 11714])
            ("doom-modeline-env" package nil nil [11716 11744]))          
      :file "doom-modeline-env.el"
      :pointmax 11781
      :fsize 11780
      :lastmodtime '(25869 48051 744796 812000)
      :unmatched-syntax '((close-paren 984 . 985) (symbol 947 . 964) (open-paren 946 . 947)))
    (semanticdb-table "semanticdb-table-bc17c11a"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("doom-modeline-core" include nil nil [3289 3318])
            ("doom-modeline-segments" include nil nil [3319 3352])
            ("doom-modeline-def-modeline" code nil nil [3377 3738])
            ("doom-modeline-def-modeline" code nil nil [3740 3866])
            ("doom-modeline-def-modeline" code nil nil [3868 4164])
            ("doom-modeline-def-modeline" code nil nil [4166 4397])
            ("doom-modeline-def-modeline" code nil nil [4399 4623])
            ("doom-modeline-def-modeline" code nil nil [4625 4872])
            ("doom-modeline-def-modeline" code nil nil [4874 5000])
            ("doom-modeline-def-modeline" code nil nil [5002 5186])
            ("doom-modeline-def-modeline" code nil nil [5188 5343])
            ("doom-modeline-def-modeline" code nil nil [5345 5616])
            ("doom-modeline-def-modeline" code nil nil [5618 5766])
            ("doom-modeline-def-modeline" code nil nil [5768 6044])
            ("doom-modeline-def-modeline" code nil nil [6046 6169])
            ("doom-modeline-def-modeline" code nil nil [6171 6392])
            ("doom-modeline-def-modeline" code nil nil [6394 6535])
            ("doom-modeline-set-main-modeline" function (:arguments ("default")) nil [6575 6769])
            ("2C-mode-line-format" variable nil nil [6815 6843])
            ("flymake-mode-line-format" variable nil nil [6844 6877])
            ("helm-ag-show-status-function" variable nil nil [6878 6915])
            ("declare-function" code nil nil [6916 6973])
            ("doom-modeline-mode-map" variable (:default-value (make-sparse-keymap)) nil [6975 7027])
            ("doom-modeline-mode-alist" variable (:default-value '((message-mode . message) (git-commit-mode . message) (magit-mode . vcs) (dashboard-mode . dashboard) (Info-mode . info) (image-mode . media) (pdf-view-mode . pdf) (org-src-mode . org-src) (paradox-menu-mode . package) (xwidget-webkit-mode . minimal) (git-timemachine-mode . timemachine) (calc-mode . calculator) (calc-trail-mode . calculator) (circe-mode . special) (erc-mode . special) (rcirc-mode . special))) nil [7029 7695])
            ("doom-modeline-auto-set-modeline" function nil nil [7697 7944])
            ("doom-modeline-set-helm-modeline" function (:arguments ("_")) nil [7946 8073])
            ("define-minor-mode" code nil nil [8090 10144])
            ("doom-modeline" package nil nil [10146 10170]))          
      :file "doom-modeline.el"
      :pointmax 10203
      :fsize 10202
      :lastmodtime '(25869 48051 745440 524000)
      :unmatched-syntax nil))
  :file "!Users!parkergabel!.emacs.d!straight!repos!doom-modeline!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
